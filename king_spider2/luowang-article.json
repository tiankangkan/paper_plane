[{"url": "http://www.luoo.net/music/802", "abstract": ["\n        \u6bcf\u4e2a\u4eba\u90fd\u4f3c\u4e4e\u6709\u7740\u8fd9\u6837\u7684\u65f6\u523b\uff1a\u5728\u6f6e\u6c34\u822c\u6d8c\u52a8\u7684\u4eba\u7fa4\u91cc\uff0c\u6709\u65f6\u53cd\u800c\u4f1a\u89c9\u5f97\u5bc2\u5bde\uff1b\u5728\u4e00\u4e2a\u5982\u9c7c\u5f97\u6c34\u7684\u5730\u65b9\uff0c\u5374\u968f\u65f6\u51c6\u5907\u79bb\u53bb\uff1b\u5728\u5e94\u8be5\u9ad8\u5174\u7684\u65f6\u5019\uff0c\u5fc3\u4e2d\u5374\u5fae\u5fae\u6cdb\u7740\u83ab\u540d\u7684\u5fe7\u4f24\u3002\u867d\u7136\u6211\u4eec\u624b\u4e2d\u63e1\u4f4f\u7684\u5df2\u7ecf\u90a3\u4e48\u591a\uff0c\u5374\u9690\u9690\u8fd8\u5728\u6e34\u671b\u7740\u4ec0\u4e48\uff0c\u5728\u613f\u671b\u4e00\u4e00\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u53cd\u800c\u8d8a\u53d1\u89c9\u5f97\u538c\u5026\u5931\u843d\u3002 \u5e78\u597d\u97f3\u4e50\u603b\u5728\u8fd9\u65f6\u80fd\u591f\u7ed9\u6211\u4eec\u6700\u5927\u7684\u6170\u85c9\uff0c\u80fd\u591f\u8ba9\u4eba\u5728\u5929\u9a6c\u884c\u7a7a\u7684\u4e16\u754c\u91cc\u9a70\u9a8b\u4e07\u91cc\u3002", "\n", "\n\u6bcf\u4e2a\u4eba\u90fd\u62e5\u6709\u7740\u4e00\u5927\u5806\u7684\u751f\u6d3b\u7d20\u6750\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u4eba\u53ef\u4ee5\u4ece\u7e41\u6742\u7684\u751f\u6d3b\u4e2d\u63d0\u70bc\u51fa\u76f4\u51fb\u4eba\u5fc3\u7684\u65cb\u5f8b\uff0c\u800c\u8fd9\u4e9b\u6b4c\u8005\u5374\u505a\u5230\u4e86\u3002\u6bcf\u4e2a\u58f0\u97f3\u90fd\u50cf\u662f\u5728\u541f\u5531\u7740\u4e00\u6bb5\u6c81\u4eba\u5fc3\u813e\u4e14\u6da6\u7269\u65e0\u58f0\u7684\u6545\u4e8b\uff0c\u4f3c\u8ba9\u4eba\u91cd\u65b0\u751f\u6d3b\u4e86\u4e00\u6b21\u522b\u4eba\u7684\u751f\u6d3b\u3002\u5373\u4f7f\u65f6\u5149\u834f\u82d2\u3001\u5373\u4f7f\u957f\u8def\u8fe2\u8fe2\uff0c\u6b4c\u8005\u4e00\u76f4\u628a\u6700\u771f\u7684\u60c5\u7eea\u653e\u7f6e\u5728\u5fc3\u5e95\u6df1\u5904\uff0c\u4e00\u76f4\u80fd\u591f\u72ec\u5584\u5176\u8eab\u3002", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u975e\u6d32\u97f3\u4e50\u4e13\u9898\u3002\u9009\u66f2\u7684\u5185\u5bb9\u51e0\u4e4e\u8986\u76d6\u4e86\u6574\u4e2a\u975e\u6d32\u5927\u9646\uff0c\u4ece\u975e\u6d32\u5317\u90e8\u7684\u5229\u6bd4\u4e9a\u5230\u5357\u90e8\u7684\u5357\u975e\uff0c\u518d\u4ece\u897f\u90e8\u7684\u9a6c\u91cc\u5230\u4e1c\u90e8\u7684\u80af\u5c3c\u4e9a\u3002\u4f60\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u97f3\u4e50\u4e2d\u542c\u5230\u591a\u79cd\u97f3\u4e50\u5143\u7d20\u7684\u7cc5\u5408\uff0c\u5982\u4f0a\u65af\u5170\u98ce\u60c5\uff0801\u300102\uff09\u3001\u4e0d\u7f81\u7684\u96f7\u9b3c(04\u300105\uff09\u3001\u821e\u52a8\u7684\u975e\u6d32\u9f13\uff0807\uff09\uff0c\u4ee5\u53ca\u8d70\u5411\u4e16\u754c\u7684\u6d41\u884c\u97f3\u4e50\uff0803\u300106\uff09\u3002\u5982\u679c\u4f60\u559c\u6b22\u672c\u671f\u975e\u6d32\u97f3\u4e50\u4e13\u9898\uff0c\u63a8\u8350\u8bd5\u542c\u843d\u7f51\u4e4b\u524d\u63a8\u51fa\u7684\u7b2c663\u671f\u300a\u4e00\u8def\u884c\u541f\u300b\u3002", "\n", "\nCover From Mario Moreno    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/56e467da8474d.jpg?imageView2/1/w/640/h/452", "title": "\u957f\u8def\u8fe2\u8fe2"},
{"url": "http://www.luoo.net/music/377", "abstract": ["\n            "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5253ecfc056f3.jpg?imageView2/1/w/640/h/452", "title": "\u71c3\u70e7\u5728\u82cd\u7a79\u91cc\u7684\u633d\u6b4c"},
{"url": "http://www.luoo.net/music/810", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u96f7\u9b3c\uff08Reggae\uff09\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u96f7\u9b3c\u97f3\u4e50\u7684\u672c\u8d28\u867d\u7136\u662f\u82e6\u4e2d\u4f5c\u4e50\uff0c\u4f46\u662f\u4ed6\u5374\u628a\u751f\u6d3b\u4e2d\u7684\u6b22\u4e50\u53d8\u5f97\u7b80\u5355\uff0c\u7136\u540e\u65e0\u9650\u653e\u5927\u3002\u53ef\u4ee5\u8fd9\u6837\u8bf4\uff0c\u96f7\u9b3c\u97f3\u4e50\u6bd4\u4efb\u4f55\u5176\u4ed6\u97f3\u4e50\u7c7b\u578b\u90fd\u66f4\u63a5\u8fd1\u7075\u9b42\u7684\u81ea\u7531\u3002\u4ed6\u4eec\u5e26\u7740\u91ce\u6027\u4e0e\u81ea\u7531\u7684\u6c14\u606f\uff0c\u5176\u5b9e\u5c31\u53ea\u662f\u60f3\u544a\u8bc9\u6211\u4eec\uff1a\u7231\u4e0e\u548c\u5e73\u5176\u5b9e\u771f\u4ed6\u5988\u7684\u7b80\u5355\u3002", "\n", "\nCover From Shaez Zeahs    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/570a863215c41.jpg?imageView2/1/w/640/h/452", "title": "\u5fc3\u5411\u70c2\u6f2b"},
{"url": "http://www.luoo.net/music/808", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u4e0a\u4e16\u7eaa60\u5e74\u4ee3\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u4eba\u7684\u5185\u5fc3\u5e76\u975e\u4e00\u76f4\u6e34\u671b\u5411\u751f\u6d3b\u7d22\u53d6\u66f4\u6df1\u523b\u7684\u5185\u6db5\uff0c\u800c\u662f\u5e0c\u671b\u60c5\u611f\u80fd\u591f\u7b80\u5355\u76f4\u767d\u7684\u50cf\u4e00\u9996\u53d9\u4e8b\u8bd7\u4e00\u6837\u5e73\u94fa\u800c\u53d9\u3002\u8001\u6b4c\u7684\u9b45\u529b\u5728\u4e8e\u5b83\u4eec\u80fd\u591f\u7ed9\u4eba\u8db3\u591f\u591a\u7684\u7a7a\u95f4\u53bb\u60f3\u8c61\uff0c\u8fd9\u4e9b\u97f3\u4e50\u867d\u7136\u4ece\u8fc7\u53bb\u5230\u73b0\u5728\u5df2\u7ecf50\u591a\u5e74\u4e86\uff0c\u4f46\u662f\u52a8\u542c\u4f9d\u7136\uff0c\u6000\u5ff5\u4f9d\u7136\uff0c\u5c31\u50cf\u662f\u5728\u65f6\u5149\u91cc\u6d12\u6ee1\u4e86\u8bb0\u5fc6\u7684\u5473\u9053\u3002", "\n", "\nCover From Dj Wisely    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5702aa98d14de.jpg?imageView2/1/w/640/h/452", "title": "\u6d12\u6ee1\u8bb0\u5fc6\u7684\u5473\u9053"},
{"url": "http://www.luoo.net/music/811", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u5c0f\u63d0\u7434\uff08Violin\uff09\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u5c0f\u63d0\u7434\u7684\u97f3\u8272\u50cf\u662f\u6f02\u6d6e\u5728\u7a7a\u4e2d\u7684\u96fe\u6c14\uff0c\u8f7b\u677e\u800c\u81ea\u7531\u7684\u7a7f\u68ad\u5728\u5149\u7684\u6df1\u5904\uff0c\u65f6\u800c\u7f20\u7ef5\u6d41\u8fde,\u65f6\u800c\u6c89\u9189\u766b\u72c2\u3002\u56de\u5934\u671b\u65f6\uff0c\u5df2\u98d8\u6563\u5728\u8fdc\u65b9\u7684\u5c3d\u5934\u3002\u65e2\u8ba9\u4eba\u90c1\u7ed3\uff0c\u53c8\u8ba9\u4eba\u52a8\u5bb9\u3002", "\n", "\n\u73b0\u4ee3\u610f\u4e49\u4e0a\u7684\u5c0f\u63d0\u7434\u6700\u65e9\u51fa\u73b0\u4e8e16\u4e16\u7eaa\u65e9\u671f\u7684\u610f\u5927\u5229\u5317\u90e8\u5a01\u5c3c\u65af\u3001\u70ed\u90a3\u4e9a\u7b49\u6e2f\u53e3\u3002\u5b83\u5728\u610f\u5927\u5229\u6587\u4e2d\u79f0\u4e3a\u201cviolino\u201d\uff0c\u610f\u4e3a\u201c\u5c0f\u7684\u4e2d\u63d0\u7434\u201d\u3002\u6700\u53e4\u8001\u76844\u5f26\u5c0f\u63d0\u7434\u662f\u7531\u8457\u540d\u7684\u5b89\u5fb7\u96f7\u4e9a\u00b7\u963f\u739b\u8482\uff08Andrea Amati\uff09\u5e94\u7f8e\u7b2c\u5947\u5bb6\u65cf\u4e4b\u8bf7\u5236\u4f5c\u4e8e1555\u5e74\u3002\u7531\u4e8e\u5c0f\u63d0\u7434\u7684\u97f3\u8272\u548c\u5176\u4ed6\u4e50\u5668\u6709\u660e\u663e\u7684\u4e0d\u540c\uff0c\u56e0\u6b64\u9002\u5408\u6f14\u594f\u65cb\u5f8b\u3002\u6240\u4ee5\u81ea\u5df4\u6d1b\u514b\u65f6\u671f\uff0c\u5c0f\u63d0\u7434\u5c31\u5df2\u662f\u53e4\u5178\u97f3\u4e50\u4e2d\u7684\u91cd\u8981\u4e50\u5668\u4e4b\u4e00\u3002\u4e0a\u4e16\u7eaa80\u5e74\u4ee3\u540e\uff0c\u7535\u5b50\u97f3\u4e50\u5f00\u59cb\u5174\u8d77\uff0c\u5c0f\u63d0\u7434\u7684\u97f3\u8272\u9010\u6e10\u88ab\u7535\u5b50\u5408\u6210\u7684\u5f26\u4e50\u6240\u4ee3\u66ff\u3002\u540e\u6765\uff0c\u968f\u7740\u79d1\u6280\u7684\u53d1\u5c55\uff0c\u51fa\u73b0\u4e86\u7535\u5b50\u5c0f\u63d0\u7434\u3002", "\n", "\n\u5728\u672c\u671f\u97f3\u4e50\u4e13\u9898\u4e2d\uff0c\u6240\u9009\u7684\u66f2\u76ee\u5927\u90e8\u5206\u8fdb\u884c\u4e86\u8de8\u754c\u878d\u5408\uff0c\u5e76\u975e\u5355\u7eaf\u7684\u5c0f\u63d0\u7434\u6f14\u594f\u66f2\u3002\u5982\u679c\u4f60\u559c\u6b22\u672c\u671f\u97f3\u4e50\uff0c\u63a8\u8350\u8bd5\u542c\u4e4b\u524d\u53d1\u5e03\u7684\u5c0f\u63d0\u7434\u97f3\u4e50\u4e13\u9898\u300aVol.383 \u8df3\u8dc3\u7740\u7684\u7075\u9b42\u706b\u82b1\u300b\u3002\u53e6\u5916\u4e4b\u524d\u843d\u7f51\u66fe\u53d1\u5e03\u8fc7\u4e00\u671f\u5927\u63d0\u7434\u97f3\u4e50\u4e13\u9898\u300aVol.741 \u72c2\u60f3\u66f2\u300b\uff0c\u4e5f\u53ef\u5bf9\u6bd4\u7740\u8bd5\u542c\u3002", "\n", "\nCover From Elena Paraskeva    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/570aa78e5a395.jpg?imageView2/1/w/640/h/452", "title": "\u5c31\u5728\u90a3\u65f6\u6084\u7136\u800c\u751f"},
{"url": "http://www.luoo.net/music/809", "abstract": ["\n        \u4e00\u9996\u6b4c\u5531\u5230\u6700\u540e\u8fd8\u4f1a\u5269\u4e0b\u4ec0\u4e48\uff1f", "\n", "\n\u65e0\u975e\u76f8\u9047\u522b\u79bb\u3001\u65e0\u975e\u662f\u627e\u5230\u81ea\u5df1\u7684\u4f4d\u7f6e\uff0c\u5e76\u5b89\u7136\u5730\u5f85\u4e0b\u53bb\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u522b\u65e0\u5176\u4ed6\u3002\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u5254\u9664\u6389\u8868\u9762\u7684\u73a9\u610f\uff0c\u5185\u655b\u800c\u8e0f\u5b9e\u5730\u6d3b\u7740\u3002\u5728\u707f\u70c2\u7684\u591c\u665a\u91cc\uff0c\u4f9d\u7136\u80fd\u591f\u7b11\u7740\u6d41\u51fa\u4e86\u6cea\u3002", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u534e\u8bed\u6447\u6eda\u4e50\u4e13\u9898\u3002", "\n", "\nCover From Jan Schatten    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5706769883829.jpg?imageView2/1/w/640/h/452", "title": "\u5b89\u7136\u5730\u5f85\u4e0b\u53bb"},
{"url": "http://www.luoo.net/music/807", "abstract": ["\n        \u751f\u6d3b\u4e2d\u7684\u8dcc\u5b95\u8d77\u4f0f\u4f3c\u4e4e\u90fd\u662f\u6709\u9884\u8c0b\u7684\uff0c\u4ea6\u5982\u4eba\u7684\u672c\u6027\u662f\u90a3\u4e48\u7684\u8ff7\u604b\u60b2\u5267\u7684\u53d1\u751f\u3002\u5f53\u6240\u6709\u7684\u8e81\u52a8\u3001\u6062\u5f18\u5760\u5165\u8fc7\u5f80\u7684\u7ec6\u5fae\u4e2d\u65f6\uff0c\u90a3\u753b\u9762\u50cf\u6781\u4e86\u7535\u5f71\u91cc\u6765\u56de\u6d41\u8f6c\u7684\u957f\u955c\u5934\uff0c\u8ba9\u4eba\u6f2b\u957f\u3002", "\n", "\n\u843d\u7f51\u81ea28\u53f7\u665a\u53d1\u5e03\u4f17\u7b79\u7b2c\u4e00\u5bb6\u7ebf\u4e0b\u7a7a\u95f4\u540e\uff0c\u5728\u77ed\u77ed\u768448\u5c0f\u65f6\u5185\uff0c\u91d1\u989d\u5df2\u8d85\u8fc7160\u4e07\u5143\uff0c\u8fd9\u8ba9\u4eba\u6b23\u6170\u4f7f\u7136\u3002\u611f\u8c22\u4f60\u4eec\u7684\u4fe1\u4efb\u4e0e\u652f\u6301\u3002\u867d\u7136\u5171\u5efa\u4eba\u540d\u989d\u5df2\u6ee1\uff0c\u4f46\u662f\u5927\u5bb6\u8fd8\u53ef\u7ee7\u7eed\u53c2\u52a0\u4f17\u7b79\uff0c\u672c\u6b21\u4f17\u7b79\u6d3b\u52a8\u5c06\u4e8e4\u670828\u65e5\u6b63\u5f0f\u7ed3\u675f\u3002\u6211\u4eec\u5c06\u4f1a\u5728\u505a\u597d\u7b2c\u4e00\u4e2a\u7ebf\u4e0b\u7a7a\u95f4\u8fd0\u8425\u7684\u540c\u65f6\uff0c\u5c3d\u5feb\u542f\u52a8\u5176\u4ed6\u57ce\u5e02\u7a7a\u95f4\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u6216\u8bb8\u5728\u672a\u6765\u7684\u67d0\u4e00\u5929\uff0c\u843d\u7f51\u5c06\u4f1a\u5728\u4f60\u751f\u6d3b\u7684\u57ce\u5e02\u91cc\u51fa\u73b0\u3002", "\n", "\n\u518d\u6b21\u611f\u8c22\u4f60\u4eec\u3002", "\n", "\nCover From Joanna Keler    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/56fd707fee52d.jpg?imageView2/1/w/640/h/452", "title": "\u50cf\u672a\u6765\u4e00\u6837\u53d1\u751f"},
{"url": "http://www.luoo.net/music/135", "abstract": ["\n            "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/52561fa905e44.jpg?imageView2/1/w/640/h/452", "title": "All The Way Is Misery"},
{"url": "http://www.luoo.net/music/495", "abstract": ["\n        \u6587/\u6f14", "\n", "\n\u66fe\u60f3\u753b\u4e00\u6761\u8815\u866b", "\n\u60f3\u5c06\u4e00\u679a\u679a\u9488\u70bc\u6210\u4e00\u4e2a\u4e2a\u5b57", "\n\u603b\u65e0\u4e2d\u751f\u6709\u5730\u9020\u51fa\u56f0\u5883\u4e0e\u906d\u9047", "\n\u603b\u5728\u6bcf\u4e00\u4e2a\u5373\u5c06\u5e7b\u706d\u7684\u7247\u523b\u70ed\u6cea\u76c8\u7736", "\n", "\n\u540e\u6765\u6211\u53ea\u80fd\u8ba4\u771f\u7684\u6d3b\u7740 ", "\n\u4e0e\u5e73\u5eb8\u63e1\u624b\u8a00\u548c", "\n\u597d\u50cf\u6ca1\u6709\u75db\u82e6\u4e86", "\n\u5931\u53bb\u7684\u4e1c\u897f\u53bb\u4e86\u8eab\u540e", "\n\u597d\u50cf\u7ec8\u5f52\u8fd8\u662f\u9001\u522b\u4e86", "\n\u90a3\u4e9b\u901f\u673d\u7684\u68a6\u5883\u4e0e\u7231\u60c5", "\n", "\n\u4f60\u770b", "\n\u5929\u5730\u5927\u7f8e\u800c\u4e0d\u8a00", "\n\u4e07\u7269\u6709\u7406\u800c\u4e0d\u8bf4", "\n\u6211\u7684\u76ee\u5149\u5c31\u662f\u8fd9\u6837", "\n\u671b\u7740\u6d41\u901d\u7684\u81ea\u5df1", "\n\u8fde\u540c\u90a3\u5915\u9633\u4e0b\u7684\u5f71\u653e\u5fc3\u6563\u53bb    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/52c677e0a315d.jpg?imageView2/1/w/640/h/452", "title": "\u662f\u4f60\u6216\u4e0d\u518d\u662f\u4f60"},
{"url": "http://www.luoo.net/music/812", "abstract": ["\n        \u6211\u4eec\u4e00\u76f4\u90fd\u5728\u5185\u5fc3\u6df1\u5904\u5bfb\u627e\u4e00\u6247\u80fd\u591f\u901a\u5f80\u9690\u79d8\u6b22\u4e50\u7684\u7a97\u6237\uff0c\u5e0c\u671b\u80fd\u591f\u627e\u5230\u62b5\u8fbe\u8fd9\u4e2a\u4e16\u754c\u7684\u65b9\u5f0f\u3002\u5728\u7ecf\u5386\u4e86\u5929\u5802\u5730\u72f1\u4e4b\u9694\uff0c\u4ee5\u53ca\u60b2\u4f24\u6b22\u559c\u4e4b\u5dee\u4e4b\u540e\uff0c\u624d\u53d1\u73b0\u62b5\u8fbe\u8fd9\u4e2a\u4e16\u754c\u7684\u65b9\u5f0f\u4e0d\u4e00\u5b9a\u662f\u5f80\u524d\uff0c\u4e5f\u53ef\u80fd\u662f\u5f80\u540e\u3002", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u745e\u5178\u72ec\u7acb\u97f3\u4e50\u4e13\u9898\u3002\u6700\u8fd1\u540e\u77e5\u540e\u89c9\u7684\u53d1\u73b0Kent\u4e50\u961f\u8981\u89e3\u6563\u4e4b\u540e\uff0c\u6545\u63a8\u8350\u4e00\u671f\u745e\u5178\u7684\u72ec\u7acb\u97f3\u4e50\u4e13\u9898\u4ee5\u4f5c\u7559\u5ff5\u3002", "\n", "\nCover From Anna Ternheim \u300aFor the Young\u300b.    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/571511dce19ea.jpg?imageView2/1/w/640/h/452", "title": "\u62b5\u8fbe\u8fd9\u4e2a\u4e16\u754c\u7684\u65b9\u5f0f"},
{"url": "http://www.luoo.net/music/813", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u821e\u53f0\u6447\u6eda\uff08Arena Rock\uff09\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u97f3\u4e50\u4f5c\u4e3a\u4e00\u79cd\u827a\u672f\u7684\u8868\u8fbe\u5f62\u5f0f\uff0c\u821e\u53f0\u4e0a\u7684\u8868\u6f14\u5f7b\u5e95\u7684\u5347\u534e\u4e86\u97f3\u4e50\u7684\u8868\u8fbe\u3002\u5982\u540c\u7070\u8499\u8499\u7684\u5355\u4e00\u989c\u8272\uff0c\u5f7b\u5e95\u653e\u5927\u4e3a\u8000\u773c\u593a\u76ee\u7684\u5f69\u8679\u3002\u4ece\u6700\u5f00\u59cb\u7684\u6df1\u60c5\u541f\u5531\uff0c\u5230\u4e00\u8def\u72c2\u5954\u766b\u72c2\uff0c\u518d\u5230\u6700\u540e\u8131\u4e0b\u793c\u5e3d\uff0c\u6df1\u60c5\u6b3e\u6b3e\u7684\u4fef\u8eab\u81f4\u793c\u3002\u8fd9\u4e9b\u97f3\u4e50\u7528\u4e86\u5927\u6bb5\u5927\u6bb5\u534e\u4e3d\u7684\u65cb\u5f8b\uff0c\u6784\u5efa\u4e86\u4e00\u526f\u4eba\u4e16\u95f4\u6062\u5f18\u58ee\u4e3d\u7684\u8272\u5f69\u3002", "\n", "\n\u620f\u5267\u5982\u4eba\u751f\uff0c\u4eba\u751f\u5982\u620f\u3002\u6240\u6709\u8ba9\u4eba\u53d8\u5f97\u5f7b\u5e95\u7684\u5450\u558a\uff0c\u90fd\u5728\u72c2\u98ce\u66b4\u96e8\u4e2d\u6765\u5f97\u662f\u90a3\u4e48\u7684\u6dcb\u6f13\u5c3d\u81f4\u3002\u4ece\u4e03\u516b\u5341\u5e74\u4ee3\u7684Kayak\u3001Queen\uff0c\u518d\u5230\u6b4c\u5267\u5f0f\u7684Lacrimosa\u3001Therion\u7b49\uff0c\u6bcf\u9996\u66f2\u76ee\u90fd\u6781\u5bcc\u4ee3\u8868\u6027\u3002\u7eb5\u89c2\u6574\u4e2a\u821e\u53f0\u6447\u6eda\u7684\u53d1\u5c55\u53f2\uff0c\u8fd9\u671f\u97f3\u4e50\u51e0\u4e4e\u7acb\u4f53\u7684\u7684\u5448\u73b0\u4e86\u6574\u4e2a\u821e\u53f0\u6447\u6eda\u7684\u5404\u79cd\u8868\u8fbe\u5f62\u5f0f\u3002", "\n", "\n\u6700\u540e\uff0c\u5411\u8fd9\u4e9b\u534e\u4e3d\u7684\u6b4c\u8005\u81f4\u4ee5\u5d07\u9ad8\u7684\u656c\u610f\u548c\u611f\u6000\u3002", "\n", "\n\u9644\uff1a", "\n", "\n\u8fd9\u4e2a\u4e16\u754c\u7687\u540e\u548c\u738b\u5b50\u90fd\u79bb\u5f00\u4e86\uff0c\u53ea\u5269\u4e0b\u56fd\u738b\u5b64\u8001\u7ec8\u8eab\u3002\u5c31\u5728\u8fd9\u671f\u97f3\u4e50\u53d1\u5e03\u7684\u65f6\u5019\uff0c\u542c\u95fbPrince\u53bb\u4e16\uff0c\u6240\u4ee5\u672c\u671f\u97f3\u4e50\u589e\u52a0\u4e86Prince\u7684\u4ee3\u8868\u4f5c\u54c1Purple Rain\u3002", "\n", "\n\u738b\u5b50\uff0c\u4e00\u8def\u8d70\u597d\u3002", "\n", "\nCover From Kevin Carden    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5719192a5cacd.jpg?imageView2/1/w/640/h/452", "title": "\u66b4\u96e8\u5c06\u81f3"},
{"url": "http://www.luoo.net/music/814", "abstract": ["\n        \u4e3e\u5934\u897f\u5317\u6d6e\u4e91\uff0c\u501a\u5929\u4e07\u91cc\u987b\u957f\u5251\u3002\u4eba\u8a00\u6b64\u5730\uff0c\u591c\u6df1\u957f\u89c1\uff0c\u6597\u725b\u5149\u7130\u3002\u6211\u89c9\u5c71\u9ad8\uff0c\u6f6d\u7a7a\u6c34\u51b7\uff0c\u6708\u660e\u661f\u6de1\u3002\u5f85\u71c3\u7280\u4e0b\u770b\uff0c\u51ed\u680f\u5374\u6015\uff0c\u98ce\u96f7\u6012\uff0c\u9c7c\u9f99\u60e8\u3002", "\n", "\n\u5ce1\u675f\u82cd\u6c5f\u5bf9\u8d77\uff0c\u8fc7\u5371\u697c\uff0c\u6b32\u98de\u8fd8\u655b\u3002\u5143\u9f99\u8001\u77e3\uff01\u4e0d\u59a8\u9ad8\u5367\uff0c\u51b0\u58f6\u51c9\u7c1f\u3002\u5343\u53e4\u5174\u4ea1\uff0c\u767e\u5e74\u60b2\u7b11\uff0c\u4e00\u65f6\u767b\u89c8\u3002\u95ee\u4f55\u4eba\u53c8\u5378\uff0c\u7247\u5e06\u6c99\u5cb8\uff0c\u7cfb\u659c\u9633\u7f06\uff1f", "\n", "\n\u8f9b\u5f03\u75be\u300a\u6c34\u9f99\u541f\u00b7\u8fc7\u5357\u5251\u53cc\u6eaa\u697c\u300b", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u53f2\u8bd7\u539f\u58f0\uff08Epic Ost)\u97f3\u4e50\u4e13\u9898\u3002\u5982\u679c\u4f60\u559c\u6b22\u672c\u7c7b\u578b\u97f3\u4e50\uff0c\u53ef\u4ee5\u67e5\u627e\u4e4b\u524d\u7684767\u3001677\u3001636\u3001596\u3001492\u3001414\u3001377\u7b49\u671f\u520a\u8fdb\u884c\u8bd5\u542c\u3002", "\n", "\nCover From RHADS    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/571cc2b8cea95.jpg?imageView2/1/w/640/h/452", "title": "\u4e58\u98ce\u5f52\u53bb"},
{"url": "http://www.luoo.net/music/815", "abstract": ["\n        \u8c28\u4ee5\u672c\u671f\u8282\u76ee\u732e\u7ed9\u6240\u6709\u5e2e\u52a9\u548c\u652f\u6301\u8fc7\u843d\u7f51\u7684\u670b\u53cb\u4eec\u53ca\u843d\u7f51\u56e2\u961f\u7684\u6240\u6709\u540c\u4e8b\u3002", "\n", "\n\u8fd9\u662f\u4e00\u671f\u4e0e\u201c\u5927\u5185\u5bc6\u8c08\u201d\u5408\u4f5c\u7684\u7279\u522b\u8282\u76ee\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u4f7f\u7528\u5f55\u97f3\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u64ad\u51fa\u3002", "\n", "\n4\u670819\u65e5\u665a\uff0c\u6211\u4e0e\u76f8\u5f81\u3001\u6674\u6717\u4e24\u4f4d\u8001\u53cb\u5728\u843d\u7f51\u7684\u529e\u516c\u5ba4\u91cc\u4e00\u8d77\u804a\u5929\u3002\u804a\u5230\u4e2d\u9014\u65f6\uff0c\u76f8\u5f81\u63d0\u8bae\u6211\u4eec\u5f55\u4e00\u671f\u8282\u76ee\u5427\uff0c\u8bb2\u8bb2\u5927\u5bb6\u8fd9\u4e9b\u5e74\u6765\u7684\u97f3\u4e50\u4ece\u4e1a\u65c5\u7a0b\u4ee5\u53ca\u5fc3\u5883\u7684\u53d8\u5316\uff0c\u8fd9\u671f\u5f55\u97f3\u8282\u76ee\u5c31\u662f\u5728\u8fd9\u6837\u4e00\u4e2a\u8f7b\u677e\u8bd9\u8c10\u7684\u72b6\u6001\u91cc\u5b8c\u6210\u7684\u3002\u6211\u4eec\u4e09\u4eba\u804a\u4e86\u5f88\u591a\u5f88\u591a\uff0c\u4ece\u600e\u4e48\u63a5\u89e6\u5230\u97f3\u4e50\u3001\u5230\u5404\u81ea\u600e\u4e48\u5f00\u59cb\u4ece\u4e8b\u97f3\u4e50\u884c\u4e1a\u7684\u5de5\u4f5c\u7b49\u7b49\u3002\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u8fd9\u671f\u5f55\u97f3\u77e5\u6653\u843d\u7f51\u7684\u5386\u7a0b\u4ee5\u53ca\u80cc\u540e\u7684\u4e94\u5473\u6742\u9648\u3002", "\n", "\n\u97f3\u4e50\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\uff0c\u4ed6\u5e26\u6765\u7684\u4e0d\u6b62\u662f\u4e2a\u4eba\u60c5\u7eea\u548c\u9752\u6625\u4f24\u901d\u7684\u65e0\u9650\u6c89\u6eba\u3002\u4ed6\u8fd8\u8ba9\u6211\u4eec\u62e5\u6709\u4e86\u707f\u70c2\u7684\u7075\u9b42\uff0c\u8ba9\u6211\u4eec\u62e5\u6709\u8db3\u591f\u5f3a\u5927\u7684\u529b\u91cf\uff0c\u6765\u6572\u788e\u4eba\u7fa4\u4e2d\u865a\u5984\u7684\u5b64\u72ec\u548c\u627e\u5230\u8fd9\u4e2a\u7269\u6b32\u57ce\u5e02\u7684\u75c5\u7076\u3002", "\n", "\n\u843d\u7f51\u7b2c\u4e00\u5bb6\u7ebf\u4e0b\u97f3\u4e50\u7a7a\u95f4\u7684\u4f17\u7b79\u6d3b\u52a8\u5c06\u4e8e\u4eca\u5929\u6b63\u5f0f\u5706\u6ee1\u7ed3\u675f\uff0c\u8c22\u8c22\u4f60\u4eec\u7684\u4fe1\u4efb\u4e0e\u652f\u6301\u3002\u7b2c\u4e00\u4e2a\u7ebf\u4e0b\u7a7a\u95f4\u4f4d\u4e8e\u5e7f\u5dde\uff0c\u5e76\u8ba1\u5212\u5c06\u4e8e\u516d\u6708\u4efd\u8bd5\u8425\u4e1a\uff08\u5177\u4f53\u65f6\u95f4\u5f85\u5b9a\uff09\uff0c\u5c4a\u65f6\u6b22\u8fce\u5927\u5bb6\u7684\u5230\u6765\u3002", "\n", "\n\u53e6\u5916\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u7740\u624b\u51c6\u5907\u5317\u4eac\u548c\u4e0a\u6d77\u7684\u843d\u7f51\u7ebf\u4e0b\u97f3\u4e50\u7a7a\u95f4\uff0c\u9884\u8ba1\u5c06\u4e8e\u5e74\u5e95\u6b63\u5f0f\u542f\u52a8\uff0c\u5230\u65f6\u4f1a\u63d0\u524d\u544a\u77e5\u7ed9\u5927\u5bb6\u3002", "\n", "\n\u611f\u8c22\u97f3\u4e50\u8ba9\u6211\u4eec\u76f8\u805a\u3002", "\n", "\n\u843d\u5728\u4f4e\u5904 2016.04.28", "\n", "\nCover From \u76f8\u5f81    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5720f9968f779.jpg?imageView2/1/w/640/h/452", "title": "\u6211\u4eec\u4e3a\u4f55\u6267\u8ff7\u4e0d\u6094"},
{"url": "http://www.luoo.net/music/816", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a8-Bit\u7535\u5b50\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n8-Bit\u662f\u4e00\u79cd\u98ce\u683c\u67d3\u8272\u6781\u91cd\u7684\u97f3\u4e50\u5143\u7d20\uff0c\u672c\u671f\u97f3\u4e50\u7684\u6b4c\u66f2\u9009\u7528\u4e86\u5927\u91cf\u7684\u91c7\u6837\u6765\u51f8\u663e8-Bit\u5143\u7d20\u7684\u9897\u7c92\u5ea6\uff0c\u4f7f\u5f97\u66f2\u5b50\u672c\u8eab\u4fdd\u6301\u72ec\u7acb\u6846\u67b6\u7684\u540c\u65f6\uff0c\u8fd8\u80fd\u591f\u98d8\u9038\u8d77\u6765\uff0c\u8ba9\u4eba\u6cdb\u8d77\u68a6\u5e7b\u822c\u7684\u60f3\u8c61\u3002\u90a3\u611f\u89c9\u5982\u540c\u50cf\u662f\u5728\u65f6\u95f4\u957f\u6cb3\u91cc\uff0c\u4f60\u7a81\u7136\u8f6c\u8fc7\u8eab\u6765\u5bf9\u6211\u8bf4\uff1a\u201c\u6211\u9700\u8981\u627e\u4e2a\u4eba\u503e\u8bc9\uff0c\u4e0d\u662f\u522b\u4eba\uff0c\u5fc5\u987b\u662f\u4f60\u3002\u201d", "\n", "\n\u5982\u679c\u4f60\u559c\u6b228-Bit\u97f3\u4e50\uff0c\u4e5f\u53ef\u4ee5\u53bb\u542c\u542c\u843d\u7f51\u4e4b\u524d\u5236\u4f5c\u7684\u97f3\u4e50\u671f\u520aVol.724\u300a\u91cd\u8fd4\u82f1\u96c4\u5e74\u4ee3\u300b\u3001Vol.622\u300aGame Over\u300b\u548cVol.441\u300a8-bit Love\u300b\u3002", "\n", "\nCover From oprisco    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/572478e28a87b.jpg?imageView2/1/w/640/h/452", "title": "\u6211\u9700\u8981\u627e\u4e2a\u4eba\u503e\u8bc9\uff0c\u4e0d\u662f\u522b\u4eba\uff0c\u5fc5\u987b\u662f\u4f60\u3002"}][{"url": "http://www.luoo.net/music/802", "abstract": ["\n        \u6bcf\u4e2a\u4eba\u90fd\u4f3c\u4e4e\u6709\u7740\u8fd9\u6837\u7684\u65f6\u523b\uff1a\u5728\u6f6e\u6c34\u822c\u6d8c\u52a8\u7684\u4eba\u7fa4\u91cc\uff0c\u6709\u65f6\u53cd\u800c\u4f1a\u89c9\u5f97\u5bc2\u5bde\uff1b\u5728\u4e00\u4e2a\u5982\u9c7c\u5f97\u6c34\u7684\u5730\u65b9\uff0c\u5374\u968f\u65f6\u51c6\u5907\u79bb\u53bb\uff1b\u5728\u5e94\u8be5\u9ad8\u5174\u7684\u65f6\u5019\uff0c\u5fc3\u4e2d\u5374\u5fae\u5fae\u6cdb\u7740\u83ab\u540d\u7684\u5fe7\u4f24\u3002\u867d\u7136\u6211\u4eec\u624b\u4e2d\u63e1\u4f4f\u7684\u5df2\u7ecf\u90a3\u4e48\u591a\uff0c\u5374\u9690\u9690\u8fd8\u5728\u6e34\u671b\u7740\u4ec0\u4e48\uff0c\u5728\u613f\u671b\u4e00\u4e00\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u53cd\u800c\u8d8a\u53d1\u89c9\u5f97\u538c\u5026\u5931\u843d\u3002 \u5e78\u597d\u97f3\u4e50\u603b\u5728\u8fd9\u65f6\u80fd\u591f\u7ed9\u6211\u4eec\u6700\u5927\u7684\u6170\u85c9\uff0c\u80fd\u591f\u8ba9\u4eba\u5728\u5929\u9a6c\u884c\u7a7a\u7684\u4e16\u754c\u91cc\u9a70\u9a8b\u4e07\u91cc\u3002", "\n", "\n\u6bcf\u4e2a\u4eba\u90fd\u62e5\u6709\u7740\u4e00\u5927\u5806\u7684\u751f\u6d3b\u7d20\u6750\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u4eba\u53ef\u4ee5\u4ece\u7e41\u6742\u7684\u751f\u6d3b\u4e2d\u63d0\u70bc\u51fa\u76f4\u51fb\u4eba\u5fc3\u7684\u65cb\u5f8b\uff0c\u800c\u8fd9\u4e9b\u6b4c\u8005\u5374\u505a\u5230\u4e86\u3002\u6bcf\u4e2a\u58f0\u97f3\u90fd\u50cf\u662f\u5728\u541f\u5531\u7740\u4e00\u6bb5\u6c81\u4eba\u5fc3\u813e\u4e14\u6da6\u7269\u65e0\u58f0\u7684\u6545\u4e8b\uff0c\u4f3c\u8ba9\u4eba\u91cd\u65b0\u751f\u6d3b\u4e86\u4e00\u6b21\u522b\u4eba\u7684\u751f\u6d3b\u3002\u5373\u4f7f\u65f6\u5149\u834f\u82d2\u3001\u5373\u4f7f\u957f\u8def\u8fe2\u8fe2\uff0c\u6b4c\u8005\u4e00\u76f4\u628a\u6700\u771f\u7684\u60c5\u7eea\u653e\u7f6e\u5728\u5fc3\u5e95\u6df1\u5904\uff0c\u4e00\u76f4\u80fd\u591f\u72ec\u5584\u5176\u8eab\u3002", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u975e\u6d32\u97f3\u4e50\u4e13\u9898\u3002\u9009\u66f2\u7684\u5185\u5bb9\u51e0\u4e4e\u8986\u76d6\u4e86\u6574\u4e2a\u975e\u6d32\u5927\u9646\uff0c\u4ece\u975e\u6d32\u5317\u90e8\u7684\u5229\u6bd4\u4e9a\u5230\u5357\u90e8\u7684\u5357\u975e\uff0c\u518d\u4ece\u897f\u90e8\u7684\u9a6c\u91cc\u5230\u4e1c\u90e8\u7684\u80af\u5c3c\u4e9a\u3002\u4f60\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u97f3\u4e50\u4e2d\u542c\u5230\u591a\u79cd\u97f3\u4e50\u5143\u7d20\u7684\u7cc5\u5408\uff0c\u5982\u4f0a\u65af\u5170\u98ce\u60c5\uff0801\u300102\uff09\u3001\u4e0d\u7f81\u7684\u96f7\u9b3c(04\u300105\uff09\u3001\u821e\u52a8\u7684\u975e\u6d32\u9f13\uff0807\uff09\uff0c\u4ee5\u53ca\u8d70\u5411\u4e16\u754c\u7684\u6d41\u884c\u97f3\u4e50\uff0803\u300106\uff09\u3002\u5982\u679c\u4f60\u559c\u6b22\u672c\u671f\u975e\u6d32\u97f3\u4e50\u4e13\u9898\uff0c\u63a8\u8350\u8bd5\u542c\u843d\u7f51\u4e4b\u524d\u63a8\u51fa\u7684\u7b2c663\u671f\u300a\u4e00\u8def\u884c\u541f\u300b\u3002", "\n", "\nCover From Mario Moreno    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/56e467da8474d.jpg?imageView2/1/w/640/h/452", "title": "\u957f\u8def\u8fe2\u8fe2"},
{"url": "http://www.luoo.net/music/810", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u96f7\u9b3c\uff08Reggae\uff09\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u96f7\u9b3c\u97f3\u4e50\u7684\u672c\u8d28\u867d\u7136\u662f\u82e6\u4e2d\u4f5c\u4e50\uff0c\u4f46\u662f\u4ed6\u5374\u628a\u751f\u6d3b\u4e2d\u7684\u6b22\u4e50\u53d8\u5f97\u7b80\u5355\uff0c\u7136\u540e\u65e0\u9650\u653e\u5927\u3002\u53ef\u4ee5\u8fd9\u6837\u8bf4\uff0c\u96f7\u9b3c\u97f3\u4e50\u6bd4\u4efb\u4f55\u5176\u4ed6\u97f3\u4e50\u7c7b\u578b\u90fd\u66f4\u63a5\u8fd1\u7075\u9b42\u7684\u81ea\u7531\u3002\u4ed6\u4eec\u5e26\u7740\u91ce\u6027\u4e0e\u81ea\u7531\u7684\u6c14\u606f\uff0c\u5176\u5b9e\u5c31\u53ea\u662f\u60f3\u544a\u8bc9\u6211\u4eec\uff1a\u7231\u4e0e\u548c\u5e73\u5176\u5b9e\u771f\u4ed6\u5988\u7684\u7b80\u5355\u3002", "\n", "\nCover From Shaez Zeahs    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/570a863215c41.jpg?imageView2/1/w/640/h/452", "title": "\u5fc3\u5411\u70c2\u6f2b"},
{"url": "http://www.luoo.net/music/809", "abstract": ["\n        \u4e00\u9996\u6b4c\u5531\u5230\u6700\u540e\u8fd8\u4f1a\u5269\u4e0b\u4ec0\u4e48\uff1f", "\n", "\n\u65e0\u975e\u76f8\u9047\u522b\u79bb\u3001\u65e0\u975e\u662f\u627e\u5230\u81ea\u5df1\u7684\u4f4d\u7f6e\uff0c\u5e76\u5b89\u7136\u5730\u5f85\u4e0b\u53bb\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u522b\u65e0\u5176\u4ed6\u3002\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u5254\u9664\u6389\u8868\u9762\u7684\u73a9\u610f\uff0c\u5185\u655b\u800c\u8e0f\u5b9e\u5730\u6d3b\u7740\u3002\u5728\u707f\u70c2\u7684\u591c\u665a\u91cc\uff0c\u4f9d\u7136\u80fd\u591f\u7b11\u7740\u6d41\u51fa\u4e86\u6cea\u3002", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u534e\u8bed\u6447\u6eda\u4e50\u4e13\u9898\u3002", "\n", "\nCover From Jan Schatten    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5706769883829.jpg?imageView2/1/w/640/h/452", "title": "\u5b89\u7136\u5730\u5f85\u4e0b\u53bb"},
{"url": "http://www.luoo.net/music/135", "abstract": ["\n            "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/52561fa905e44.jpg?imageView2/1/w/640/h/452", "title": "All The Way Is Misery"},
{"url": "http://www.luoo.net/music/808", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u4e0a\u4e16\u7eaa60\u5e74\u4ee3\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u4eba\u7684\u5185\u5fc3\u5e76\u975e\u4e00\u76f4\u6e34\u671b\u5411\u751f\u6d3b\u7d22\u53d6\u66f4\u6df1\u523b\u7684\u5185\u6db5\uff0c\u800c\u662f\u5e0c\u671b\u60c5\u611f\u80fd\u591f\u7b80\u5355\u76f4\u767d\u7684\u50cf\u4e00\u9996\u53d9\u4e8b\u8bd7\u4e00\u6837\u5e73\u94fa\u800c\u53d9\u3002\u8001\u6b4c\u7684\u9b45\u529b\u5728\u4e8e\u5b83\u4eec\u80fd\u591f\u7ed9\u4eba\u8db3\u591f\u591a\u7684\u7a7a\u95f4\u53bb\u60f3\u8c61\uff0c\u8fd9\u4e9b\u97f3\u4e50\u867d\u7136\u4ece\u8fc7\u53bb\u5230\u73b0\u5728\u5df2\u7ecf50\u591a\u5e74\u4e86\uff0c\u4f46\u662f\u52a8\u542c\u4f9d\u7136\uff0c\u6000\u5ff5\u4f9d\u7136\uff0c\u5c31\u50cf\u662f\u5728\u65f6\u5149\u91cc\u6d12\u6ee1\u4e86\u8bb0\u5fc6\u7684\u5473\u9053\u3002", "\n", "\nCover From Dj Wisely    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5702aa98d14de.jpg?imageView2/1/w/640/h/452", "title": "\u6d12\u6ee1\u8bb0\u5fc6\u7684\u5473\u9053"},
{"url": "http://www.luoo.net/music/807", "abstract": ["\n        \u751f\u6d3b\u4e2d\u7684\u8dcc\u5b95\u8d77\u4f0f\u4f3c\u4e4e\u90fd\u662f\u6709\u9884\u8c0b\u7684\uff0c\u4ea6\u5982\u4eba\u7684\u672c\u6027\u662f\u90a3\u4e48\u7684\u8ff7\u604b\u60b2\u5267\u7684\u53d1\u751f\u3002\u5f53\u6240\u6709\u7684\u8e81\u52a8\u3001\u6062\u5f18\u5760\u5165\u8fc7\u5f80\u7684\u7ec6\u5fae\u4e2d\u65f6\uff0c\u90a3\u753b\u9762\u50cf\u6781\u4e86\u7535\u5f71\u91cc\u6765\u56de\u6d41\u8f6c\u7684\u957f\u955c\u5934\uff0c\u8ba9\u4eba\u6f2b\u957f\u3002", "\n", "\n\u843d\u7f51\u81ea28\u53f7\u665a\u53d1\u5e03\u4f17\u7b79\u7b2c\u4e00\u5bb6\u7ebf\u4e0b\u7a7a\u95f4\u540e\uff0c\u5728\u77ed\u77ed\u768448\u5c0f\u65f6\u5185\uff0c\u91d1\u989d\u5df2\u8d85\u8fc7160\u4e07\u5143\uff0c\u8fd9\u8ba9\u4eba\u6b23\u6170\u4f7f\u7136\u3002\u611f\u8c22\u4f60\u4eec\u7684\u4fe1\u4efb\u4e0e\u652f\u6301\u3002\u867d\u7136\u5171\u5efa\u4eba\u540d\u989d\u5df2\u6ee1\uff0c\u4f46\u662f\u5927\u5bb6\u8fd8\u53ef\u7ee7\u7eed\u53c2\u52a0\u4f17\u7b79\uff0c\u672c\u6b21\u4f17\u7b79\u6d3b\u52a8\u5c06\u4e8e4\u670828\u65e5\u6b63\u5f0f\u7ed3\u675f\u3002\u6211\u4eec\u5c06\u4f1a\u5728\u505a\u597d\u7b2c\u4e00\u4e2a\u7ebf\u4e0b\u7a7a\u95f4\u8fd0\u8425\u7684\u540c\u65f6\uff0c\u5c3d\u5feb\u542f\u52a8\u5176\u4ed6\u57ce\u5e02\u7a7a\u95f4\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u6216\u8bb8\u5728\u672a\u6765\u7684\u67d0\u4e00\u5929\uff0c\u843d\u7f51\u5c06\u4f1a\u5728\u4f60\u751f\u6d3b\u7684\u57ce\u5e02\u91cc\u51fa\u73b0\u3002", "\n", "\n\u518d\u6b21\u611f\u8c22\u4f60\u4eec\u3002", "\n", "\nCover From Joanna Keler    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/56fd707fee52d.jpg?imageView2/1/w/640/h/452", "title": "\u50cf\u672a\u6765\u4e00\u6837\u53d1\u751f"},
{"url": "http://www.luoo.net/music/495", "abstract": ["\n        \u6587/\u6f14", "\n", "\n\u66fe\u60f3\u753b\u4e00\u6761\u8815\u866b", "\n\u60f3\u5c06\u4e00\u679a\u679a\u9488\u70bc\u6210\u4e00\u4e2a\u4e2a\u5b57", "\n\u603b\u65e0\u4e2d\u751f\u6709\u5730\u9020\u51fa\u56f0\u5883\u4e0e\u906d\u9047", "\n\u603b\u5728\u6bcf\u4e00\u4e2a\u5373\u5c06\u5e7b\u706d\u7684\u7247\u523b\u70ed\u6cea\u76c8\u7736", "\n", "\n\u540e\u6765\u6211\u53ea\u80fd\u8ba4\u771f\u7684\u6d3b\u7740 ", "\n\u4e0e\u5e73\u5eb8\u63e1\u624b\u8a00\u548c", "\n\u597d\u50cf\u6ca1\u6709\u75db\u82e6\u4e86", "\n\u5931\u53bb\u7684\u4e1c\u897f\u53bb\u4e86\u8eab\u540e", "\n\u597d\u50cf\u7ec8\u5f52\u8fd8\u662f\u9001\u522b\u4e86", "\n\u90a3\u4e9b\u901f\u673d\u7684\u68a6\u5883\u4e0e\u7231\u60c5", "\n", "\n\u4f60\u770b", "\n\u5929\u5730\u5927\u7f8e\u800c\u4e0d\u8a00", "\n\u4e07\u7269\u6709\u7406\u800c\u4e0d\u8bf4", "\n\u6211\u7684\u76ee\u5149\u5c31\u662f\u8fd9\u6837", "\n\u671b\u7740\u6d41\u901d\u7684\u81ea\u5df1", "\n\u8fde\u540c\u90a3\u5915\u9633\u4e0b\u7684\u5f71\u653e\u5fc3\u6563\u53bb    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/52c677e0a315d.jpg?imageView2/1/w/640/h/452", "title": "\u662f\u4f60\u6216\u4e0d\u518d\u662f\u4f60"},
{"url": "http://www.luoo.net/music/811", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u5c0f\u63d0\u7434\uff08Violin\uff09\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u5c0f\u63d0\u7434\u7684\u97f3\u8272\u50cf\u662f\u6f02\u6d6e\u5728\u7a7a\u4e2d\u7684\u96fe\u6c14\uff0c\u8f7b\u677e\u800c\u81ea\u7531\u7684\u7a7f\u68ad\u5728\u5149\u7684\u6df1\u5904\uff0c\u65f6\u800c\u7f20\u7ef5\u6d41\u8fde,\u65f6\u800c\u6c89\u9189\u766b\u72c2\u3002\u56de\u5934\u671b\u65f6\uff0c\u5df2\u98d8\u6563\u5728\u8fdc\u65b9\u7684\u5c3d\u5934\u3002\u65e2\u8ba9\u4eba\u90c1\u7ed3\uff0c\u53c8\u8ba9\u4eba\u52a8\u5bb9\u3002", "\n", "\n\u73b0\u4ee3\u610f\u4e49\u4e0a\u7684\u5c0f\u63d0\u7434\u6700\u65e9\u51fa\u73b0\u4e8e16\u4e16\u7eaa\u65e9\u671f\u7684\u610f\u5927\u5229\u5317\u90e8\u5a01\u5c3c\u65af\u3001\u70ed\u90a3\u4e9a\u7b49\u6e2f\u53e3\u3002\u5b83\u5728\u610f\u5927\u5229\u6587\u4e2d\u79f0\u4e3a\u201cviolino\u201d\uff0c\u610f\u4e3a\u201c\u5c0f\u7684\u4e2d\u63d0\u7434\u201d\u3002\u6700\u53e4\u8001\u76844\u5f26\u5c0f\u63d0\u7434\u662f\u7531\u8457\u540d\u7684\u5b89\u5fb7\u96f7\u4e9a\u00b7\u963f\u739b\u8482\uff08Andrea Amati\uff09\u5e94\u7f8e\u7b2c\u5947\u5bb6\u65cf\u4e4b\u8bf7\u5236\u4f5c\u4e8e1555\u5e74\u3002\u7531\u4e8e\u5c0f\u63d0\u7434\u7684\u97f3\u8272\u548c\u5176\u4ed6\u4e50\u5668\u6709\u660e\u663e\u7684\u4e0d\u540c\uff0c\u56e0\u6b64\u9002\u5408\u6f14\u594f\u65cb\u5f8b\u3002\u6240\u4ee5\u81ea\u5df4\u6d1b\u514b\u65f6\u671f\uff0c\u5c0f\u63d0\u7434\u5c31\u5df2\u662f\u53e4\u5178\u97f3\u4e50\u4e2d\u7684\u91cd\u8981\u4e50\u5668\u4e4b\u4e00\u3002\u4e0a\u4e16\u7eaa80\u5e74\u4ee3\u540e\uff0c\u7535\u5b50\u97f3\u4e50\u5f00\u59cb\u5174\u8d77\uff0c\u5c0f\u63d0\u7434\u7684\u97f3\u8272\u9010\u6e10\u88ab\u7535\u5b50\u5408\u6210\u7684\u5f26\u4e50\u6240\u4ee3\u66ff\u3002\u540e\u6765\uff0c\u968f\u7740\u79d1\u6280\u7684\u53d1\u5c55\uff0c\u51fa\u73b0\u4e86\u7535\u5b50\u5c0f\u63d0\u7434\u3002", "\n", "\n\u5728\u672c\u671f\u97f3\u4e50\u4e13\u9898\u4e2d\uff0c\u6240\u9009\u7684\u66f2\u76ee\u5927\u90e8\u5206\u8fdb\u884c\u4e86\u8de8\u754c\u878d\u5408\uff0c\u5e76\u975e\u5355\u7eaf\u7684\u5c0f\u63d0\u7434\u6f14\u594f\u66f2\u3002\u5982\u679c\u4f60\u559c\u6b22\u672c\u671f\u97f3\u4e50\uff0c\u63a8\u8350\u8bd5\u542c\u4e4b\u524d\u53d1\u5e03\u7684\u5c0f\u63d0\u7434\u97f3\u4e50\u4e13\u9898\u300aVol.383 \u8df3\u8dc3\u7740\u7684\u7075\u9b42\u706b\u82b1\u300b\u3002\u53e6\u5916\u4e4b\u524d\u843d\u7f51\u66fe\u53d1\u5e03\u8fc7\u4e00\u671f\u5927\u63d0\u7434\u97f3\u4e50\u4e13\u9898\u300aVol.741 \u72c2\u60f3\u66f2\u300b\uff0c\u4e5f\u53ef\u5bf9\u6bd4\u7740\u8bd5\u542c\u3002", "\n", "\nCover From Elena Paraskeva    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/570aa78e5a395.jpg?imageView2/1/w/640/h/452", "title": "\u5c31\u5728\u90a3\u65f6\u6084\u7136\u800c\u751f"},
{"url": "http://www.luoo.net/music/377", "abstract": ["\n            "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5253ecfc056f3.jpg?imageView2/1/w/640/h/452", "title": "\u71c3\u70e7\u5728\u82cd\u7a79\u91cc\u7684\u633d\u6b4c"},
{"url": "http://www.luoo.net/music/812", "abstract": ["\n        \u6211\u4eec\u4e00\u76f4\u90fd\u5728\u5185\u5fc3\u6df1\u5904\u5bfb\u627e\u4e00\u6247\u80fd\u591f\u901a\u5f80\u9690\u79d8\u6b22\u4e50\u7684\u7a97\u6237\uff0c\u5e0c\u671b\u80fd\u591f\u627e\u5230\u62b5\u8fbe\u8fd9\u4e2a\u4e16\u754c\u7684\u65b9\u5f0f\u3002\u5728\u7ecf\u5386\u4e86\u5929\u5802\u5730\u72f1\u4e4b\u9694\uff0c\u4ee5\u53ca\u60b2\u4f24\u6b22\u559c\u4e4b\u5dee\u4e4b\u540e\uff0c\u624d\u53d1\u73b0\u62b5\u8fbe\u8fd9\u4e2a\u4e16\u754c\u7684\u65b9\u5f0f\u4e0d\u4e00\u5b9a\u662f\u5f80\u524d\uff0c\u4e5f\u53ef\u80fd\u662f\u5f80\u540e\u3002", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u745e\u5178\u72ec\u7acb\u97f3\u4e50\u4e13\u9898\u3002\u6700\u8fd1\u540e\u77e5\u540e\u89c9\u7684\u53d1\u73b0Kent\u4e50\u961f\u8981\u89e3\u6563\u4e4b\u540e\uff0c\u6545\u63a8\u8350\u4e00\u671f\u745e\u5178\u7684\u72ec\u7acb\u97f3\u4e50\u4e13\u9898\u4ee5\u4f5c\u7559\u5ff5\u3002", "\n", "\nCover From Anna Ternheim \u300aFor the Young\u300b.    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/571511dce19ea.jpg?imageView2/1/w/640/h/452", "title": "\u62b5\u8fbe\u8fd9\u4e2a\u4e16\u754c\u7684\u65b9\u5f0f"},
{"url": "http://www.luoo.net/music/815", "abstract": ["\n        \u8c28\u4ee5\u672c\u671f\u8282\u76ee\u732e\u7ed9\u6240\u6709\u5e2e\u52a9\u548c\u652f\u6301\u8fc7\u843d\u7f51\u7684\u670b\u53cb\u4eec\u53ca\u843d\u7f51\u56e2\u961f\u7684\u6240\u6709\u540c\u4e8b\u3002", "\n", "\n\u8fd9\u662f\u4e00\u671f\u4e0e\u201c\u5927\u5185\u5bc6\u8c08\u201d\u5408\u4f5c\u7684\u7279\u522b\u8282\u76ee\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u4f7f\u7528\u5f55\u97f3\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u64ad\u51fa\u3002", "\n", "\n4\u670819\u65e5\u665a\uff0c\u6211\u4e0e\u76f8\u5f81\u3001\u6674\u6717\u4e24\u4f4d\u8001\u53cb\u5728\u843d\u7f51\u7684\u529e\u516c\u5ba4\u91cc\u4e00\u8d77\u804a\u5929\u3002\u804a\u5230\u4e2d\u9014\u65f6\uff0c\u76f8\u5f81\u63d0\u8bae\u6211\u4eec\u5f55\u4e00\u671f\u8282\u76ee\u5427\uff0c\u8bb2\u8bb2\u5927\u5bb6\u8fd9\u4e9b\u5e74\u6765\u7684\u97f3\u4e50\u4ece\u4e1a\u65c5\u7a0b\u4ee5\u53ca\u5fc3\u5883\u7684\u53d8\u5316\uff0c\u8fd9\u671f\u5f55\u97f3\u8282\u76ee\u5c31\u662f\u5728\u8fd9\u6837\u4e00\u4e2a\u8f7b\u677e\u8bd9\u8c10\u7684\u72b6\u6001\u91cc\u5b8c\u6210\u7684\u3002\u6211\u4eec\u4e09\u4eba\u804a\u4e86\u5f88\u591a\u5f88\u591a\uff0c\u4ece\u600e\u4e48\u63a5\u89e6\u5230\u97f3\u4e50\u3001\u5230\u5404\u81ea\u600e\u4e48\u5f00\u59cb\u4ece\u4e8b\u97f3\u4e50\u884c\u4e1a\u7684\u5de5\u4f5c\u7b49\u7b49\u3002\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u8fd9\u671f\u5f55\u97f3\u77e5\u6653\u843d\u7f51\u7684\u5386\u7a0b\u4ee5\u53ca\u80cc\u540e\u7684\u4e94\u5473\u6742\u9648\u3002", "\n", "\n\u97f3\u4e50\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\uff0c\u4ed6\u5e26\u6765\u7684\u4e0d\u6b62\u662f\u4e2a\u4eba\u60c5\u7eea\u548c\u9752\u6625\u4f24\u901d\u7684\u65e0\u9650\u6c89\u6eba\u3002\u4ed6\u8fd8\u8ba9\u6211\u4eec\u62e5\u6709\u4e86\u707f\u70c2\u7684\u7075\u9b42\uff0c\u8ba9\u6211\u4eec\u62e5\u6709\u8db3\u591f\u5f3a\u5927\u7684\u529b\u91cf\uff0c\u6765\u6572\u788e\u4eba\u7fa4\u4e2d\u865a\u5984\u7684\u5b64\u72ec\u548c\u627e\u5230\u8fd9\u4e2a\u7269\u6b32\u57ce\u5e02\u7684\u75c5\u7076\u3002", "\n", "\n\u843d\u7f51\u7b2c\u4e00\u5bb6\u7ebf\u4e0b\u97f3\u4e50\u7a7a\u95f4\u7684\u4f17\u7b79\u6d3b\u52a8\u5c06\u4e8e\u4eca\u5929\u6b63\u5f0f\u5706\u6ee1\u7ed3\u675f\uff0c\u8c22\u8c22\u4f60\u4eec\u7684\u4fe1\u4efb\u4e0e\u652f\u6301\u3002\u7b2c\u4e00\u4e2a\u7ebf\u4e0b\u7a7a\u95f4\u4f4d\u4e8e\u5e7f\u5dde\uff0c\u5e76\u8ba1\u5212\u5c06\u4e8e\u516d\u6708\u4efd\u8bd5\u8425\u4e1a\uff08\u5177\u4f53\u65f6\u95f4\u5f85\u5b9a\uff09\uff0c\u5c4a\u65f6\u6b22\u8fce\u5927\u5bb6\u7684\u5230\u6765\u3002", "\n", "\n\u53e6\u5916\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u7740\u624b\u51c6\u5907\u5317\u4eac\u548c\u4e0a\u6d77\u7684\u843d\u7f51\u7ebf\u4e0b\u97f3\u4e50\u7a7a\u95f4\uff0c\u9884\u8ba1\u5c06\u4e8e\u5e74\u5e95\u6b63\u5f0f\u542f\u52a8\uff0c\u5230\u65f6\u4f1a\u63d0\u524d\u544a\u77e5\u7ed9\u5927\u5bb6\u3002", "\n", "\n\u611f\u8c22\u97f3\u4e50\u8ba9\u6211\u4eec\u76f8\u805a\u3002", "\n", "\n\u843d\u5728\u4f4e\u5904 2016.04.28", "\n", "\nCover From \u76f8\u5f81    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5720f9968f779.jpg?imageView2/1/w/640/h/452", "title": "\u6211\u4eec\u4e3a\u4f55\u6267\u8ff7\u4e0d\u6094"},
{"url": "http://www.luoo.net/music/813", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a\u821e\u53f0\u6447\u6eda\uff08Arena Rock\uff09\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n\u97f3\u4e50\u4f5c\u4e3a\u4e00\u79cd\u827a\u672f\u7684\u8868\u8fbe\u5f62\u5f0f\uff0c\u821e\u53f0\u4e0a\u7684\u8868\u6f14\u5f7b\u5e95\u7684\u5347\u534e\u4e86\u97f3\u4e50\u7684\u8868\u8fbe\u3002\u5982\u540c\u7070\u8499\u8499\u7684\u5355\u4e00\u989c\u8272\uff0c\u5f7b\u5e95\u653e\u5927\u4e3a\u8000\u773c\u593a\u76ee\u7684\u5f69\u8679\u3002\u4ece\u6700\u5f00\u59cb\u7684\u6df1\u60c5\u541f\u5531\uff0c\u5230\u4e00\u8def\u72c2\u5954\u766b\u72c2\uff0c\u518d\u5230\u6700\u540e\u8131\u4e0b\u793c\u5e3d\uff0c\u6df1\u60c5\u6b3e\u6b3e\u7684\u4fef\u8eab\u81f4\u793c\u3002\u8fd9\u4e9b\u97f3\u4e50\u7528\u4e86\u5927\u6bb5\u5927\u6bb5\u534e\u4e3d\u7684\u65cb\u5f8b\uff0c\u6784\u5efa\u4e86\u4e00\u526f\u4eba\u4e16\u95f4\u6062\u5f18\u58ee\u4e3d\u7684\u8272\u5f69\u3002", "\n", "\n\u620f\u5267\u5982\u4eba\u751f\uff0c\u4eba\u751f\u5982\u620f\u3002\u6240\u6709\u8ba9\u4eba\u53d8\u5f97\u5f7b\u5e95\u7684\u5450\u558a\uff0c\u90fd\u5728\u72c2\u98ce\u66b4\u96e8\u4e2d\u6765\u5f97\u662f\u90a3\u4e48\u7684\u6dcb\u6f13\u5c3d\u81f4\u3002\u4ece\u4e03\u516b\u5341\u5e74\u4ee3\u7684Kayak\u3001Queen\uff0c\u518d\u5230\u6b4c\u5267\u5f0f\u7684Lacrimosa\u3001Therion\u7b49\uff0c\u6bcf\u9996\u66f2\u76ee\u90fd\u6781\u5bcc\u4ee3\u8868\u6027\u3002\u7eb5\u89c2\u6574\u4e2a\u821e\u53f0\u6447\u6eda\u7684\u53d1\u5c55\u53f2\uff0c\u8fd9\u671f\u97f3\u4e50\u51e0\u4e4e\u7acb\u4f53\u7684\u7684\u5448\u73b0\u4e86\u6574\u4e2a\u821e\u53f0\u6447\u6eda\u7684\u5404\u79cd\u8868\u8fbe\u5f62\u5f0f\u3002", "\n", "\n\u6700\u540e\uff0c\u5411\u8fd9\u4e9b\u534e\u4e3d\u7684\u6b4c\u8005\u81f4\u4ee5\u5d07\u9ad8\u7684\u656c\u610f\u548c\u611f\u6000\u3002", "\n", "\n\u9644\uff1a", "\n", "\n\u8fd9\u4e2a\u4e16\u754c\u7687\u540e\u548c\u738b\u5b50\u90fd\u79bb\u5f00\u4e86\uff0c\u53ea\u5269\u4e0b\u56fd\u738b\u5b64\u8001\u7ec8\u8eab\u3002\u5c31\u5728\u8fd9\u671f\u97f3\u4e50\u53d1\u5e03\u7684\u65f6\u5019\uff0c\u542c\u95fbPrince\u53bb\u4e16\uff0c\u6240\u4ee5\u672c\u671f\u97f3\u4e50\u589e\u52a0\u4e86Prince\u7684\u4ee3\u8868\u4f5c\u54c1Purple Rain\u3002", "\n", "\n\u738b\u5b50\uff0c\u4e00\u8def\u8d70\u597d\u3002", "\n", "\nCover From Kevin Carden    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/5719192a5cacd.jpg?imageView2/1/w/640/h/452", "title": "\u66b4\u96e8\u5c06\u81f3"},
{"url": "http://www.luoo.net/music/816", "abstract": ["\n        \u672c\u671f\u97f3\u4e50\u4e3a8-Bit\u7535\u5b50\u97f3\u4e50\u4e13\u9898\u3002", "\n", "\n8-Bit\u662f\u4e00\u79cd\u98ce\u683c\u67d3\u8272\u6781\u91cd\u7684\u97f3\u4e50\u5143\u7d20\uff0c\u672c\u671f\u97f3\u4e50\u7684\u6b4c\u66f2\u9009\u7528\u4e86\u5927\u91cf\u7684\u91c7\u6837\u6765\u51f8\u663e8-Bit\u5143\u7d20\u7684\u9897\u7c92\u5ea6\uff0c\u4f7f\u5f97\u66f2\u5b50\u672c\u8eab\u4fdd\u6301\u72ec\u7acb\u6846\u67b6\u7684\u540c\u65f6\uff0c\u8fd8\u80fd\u591f\u98d8\u9038\u8d77\u6765\uff0c\u8ba9\u4eba\u6cdb\u8d77\u68a6\u5e7b\u822c\u7684\u60f3\u8c61\u3002\u90a3\u611f\u89c9\u5982\u540c\u50cf\u662f\u5728\u65f6\u95f4\u957f\u6cb3\u91cc\uff0c\u4f60\u7a81\u7136\u8f6c\u8fc7\u8eab\u6765\u5bf9\u6211\u8bf4\uff1a\u201c\u6211\u9700\u8981\u627e\u4e2a\u4eba\u503e\u8bc9\uff0c\u4e0d\u662f\u522b\u4eba\uff0c\u5fc5\u987b\u662f\u4f60\u3002\u201d", "\n", "\n\u5982\u679c\u4f60\u559c\u6b228-Bit\u97f3\u4e50\uff0c\u4e5f\u53ef\u4ee5\u53bb\u542c\u542c\u843d\u7f51\u4e4b\u524d\u5236\u4f5c\u7684\u97f3\u4e50\u671f\u520aVol.724\u300a\u91cd\u8fd4\u82f1\u96c4\u5e74\u4ee3\u300b\u3001Vol.622\u300aGame Over\u300b\u548cVol.441\u300a8-bit Love\u300b\u3002", "\n", "\nCover From oprisco    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/572478e28a87b.jpg?imageView2/1/w/640/h/452", "title": "\u6211\u9700\u8981\u627e\u4e2a\u4eba\u503e\u8bc9\uff0c\u4e0d\u662f\u522b\u4eba\uff0c\u5fc5\u987b\u662f\u4f60\u3002"},
{"url": "http://www.luoo.net/music/814", "abstract": ["\n        \u4e3e\u5934\u897f\u5317\u6d6e\u4e91\uff0c\u501a\u5929\u4e07\u91cc\u987b\u957f\u5251\u3002\u4eba\u8a00\u6b64\u5730\uff0c\u591c\u6df1\u957f\u89c1\uff0c\u6597\u725b\u5149\u7130\u3002\u6211\u89c9\u5c71\u9ad8\uff0c\u6f6d\u7a7a\u6c34\u51b7\uff0c\u6708\u660e\u661f\u6de1\u3002\u5f85\u71c3\u7280\u4e0b\u770b\uff0c\u51ed\u680f\u5374\u6015\uff0c\u98ce\u96f7\u6012\uff0c\u9c7c\u9f99\u60e8\u3002", "\n", "\n\u5ce1\u675f\u82cd\u6c5f\u5bf9\u8d77\uff0c\u8fc7\u5371\u697c\uff0c\u6b32\u98de\u8fd8\u655b\u3002\u5143\u9f99\u8001\u77e3\uff01\u4e0d\u59a8\u9ad8\u5367\uff0c\u51b0\u58f6\u51c9\u7c1f\u3002\u5343\u53e4\u5174\u4ea1\uff0c\u767e\u5e74\u60b2\u7b11\uff0c\u4e00\u65f6\u767b\u89c8\u3002\u95ee\u4f55\u4eba\u53c8\u5378\uff0c\u7247\u5e06\u6c99\u5cb8\uff0c\u7cfb\u659c\u9633\u7f06\uff1f", "\n", "\n\u8f9b\u5f03\u75be\u300a\u6c34\u9f99\u541f\u00b7\u8fc7\u5357\u5251\u53cc\u6eaa\u697c\u300b", "\n", "\n\u672c\u671f\u97f3\u4e50\u4e3a\u53f2\u8bd7\u539f\u58f0\uff08Epic Ost)\u97f3\u4e50\u4e13\u9898\u3002\u5982\u679c\u4f60\u559c\u6b22\u672c\u7c7b\u578b\u97f3\u4e50\uff0c\u53ef\u4ee5\u67e5\u627e\u4e4b\u524d\u7684767\u3001677\u3001636\u3001596\u3001492\u3001414\u3001377\u7b49\u671f\u520a\u8fdb\u884c\u8bd5\u542c\u3002", "\n", "\nCover From RHADS    "], "cover": "http://7xkszy.com2.z0.glb.qiniucdn.com/pics/vol/571cc2b8cea95.jpg?imageView2/1/w/640/h/452", "title": "\u4e58\u98ce\u5f52\u53bb"}][{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Here is a piece of <strong>C++</strong> code that seems very peculiar. For some strange reason, sorting the data miraculously makes the code almost six times faster.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;algorithm&gt;\n#include &lt;ctime&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    // Generate data\n    const unsigned arraySize = 32768;\n    int data[arraySize];\n\n    for (unsigned c = 0; c &lt; arraySize; ++c)\n        data[c] = std::rand() % 256;\n\n    // !!! With this, the next loop runs faster\n    std::sort(data, data + arraySize);\n\n    // Test\n    clock_t start = clock();\n    long long sum = 0;\n\n    for (unsigned i = 0; i &lt; 100000; ++i)\n    {\n        // Primary loop\n        for (unsigned c = 0; c &lt; arraySize; ++c)\n        {\n            if (data[c] &gt;= 128)\n                sum += data[c];\n        }\n    }\n\n    double elapsedTime = static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC;\n\n    std::cout &lt;&lt; elapsedTime &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"sum = \" &lt;&lt; sum &lt;&lt; std::endl;\n}\n</code></pre>\n\n<ul>\n<li>Without <code>std::sort(data, data + arraySize);</code>, the code runs in <strong>11.54</strong> seconds.</li>\n<li>With the sorted data, the code runs in <strong>1.93</strong> seconds.</li>\n</ul>\n\n<p>Initially, I thought this might be just a language or compiler anomaly. So I tried it in <strong>Java</strong>.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>import java.util.Arrays;\nimport java.util.Random;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        // Generate data\n        int arraySize = 32768;\n        int data[] = new int[arraySize];\n\n        Random rnd = new Random(0);\n        for (int c = 0; c &lt; arraySize; ++c)\n            data[c] = rnd.nextInt() % 256;\n\n        // !!! With this, the next loop runs faster\n        Arrays.sort(data);\n\n        // Test\n        long start = System.nanoTime();\n        long sum = 0;\n\n        for (int i = 0; i &lt; 100000; ++i)\n        {\n            // Primary loop\n            for (int c = 0; c &lt; arraySize; ++c)\n            {\n                if (data[c] &gt;= 128)\n                    sum += data[c];\n            }\n        }\n\n        System.out.println((System.nanoTime() - start) / 1000000000.0);\n        System.out.println(\"sum = \" + sum);\n    }\n}\n</code></pre>\n\n<p>With a somewhat similar, but less extreme result.</p>\n\n<hr>\n\n<p>My first thought was that sorting brings the data into the cache, but my next thought was how silly that is, because the array was just generated.</p>\n\n<ul>\n<li>What is going on?</li>\n<li>Why is a sorted array faster than an unsorted array?</li>\n<li>The code is summing up some independent terms, and the order should not matter.</li>\n</ul>\n    </div>", "votes": "14388", "title": "Why is processing a sorted array faster than an unsorted array?", "link": "http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array", "tags": ["java", "c++", "performance", "optimization", "branch-prediction"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I need to check the <code>checked</code> property of a checkbox and perform an action based on the checked property using jQuery.</p>\n\n<p>For example, if the age checkbox is checked, then I need to show a textbox to enter age, else hide the textbox.</p>\n\n<p>But the following code returns <code>false</code> by default:</p>\n\n<pre><code>if($('#isAgeSelected').attr('checked')) {\n    $(\"#txtAge\").show();\n} else {\n    $(\"#txtAge\").hide();\n}\n</code></pre>\n\n<p>How do I successfully query the <code>checked</code> property?</p>\n    </div>", "votes": "2565", "title": "Check checkbox checked property", "link": "http://stackoverflow.com/questions/901712/check-checkbox-checked-property", "tags": ["javascript", "jquery", "checkbox"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Until today I thought that for example:</p>\n\n<pre><code>i += j;\n</code></pre>\n\n<p>is just a shortcut for:</p>\n\n<pre><code>i = i + j;\n</code></pre>\n\n<p>But what if we try this:</p>\n\n<pre><code>int i = 5;\nlong j = 8;\n</code></pre>\n\n<p>Then <code>i = i + j;</code> will not compile but <code>i += j;</code> will compile fine.</p>\n\n<p>Does it mean that in fact <code>i += j;</code> is a shortcut for something like this\n<code>i = (type of i) (i + j)</code>?</p>\n    </div>", "votes": "2574", "title": "Java's +=, -=, *=, /= compound assignment operators", "link": "http://stackoverflow.com/questions/8710619/javas-compound-assignment-operators", "tags": ["java", "casting", "operators", "variable-assignment", "assignment-operator"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How do I get the path of the directory in which a <a href=\"http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29\">Bash</a> script is located FROM that Bash script?</p>\n\n<p>For instance, let's say I want to use a Bash script as a launcher for another application. I want to change the working directory to the one where the Bash script is located, so I can operate on the files in that directory, like so: </p>\n\n<pre>$ ./application</pre>\n    </div>", "votes": "2575", "title": "Can a Bash script tell what directory it's stored in?", "link": "http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in", "tags": ["bash", "directory"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Is there something in JavaScript similar to <code>@import</code> in CSS that allows you to include a JavaScript file inside another JavaScript file?</p>\n    </div>", "votes": "2624", "title": "Include a JavaScript file in another JavaScript file?", "link": "http://stackoverflow.com/questions/950087/include-a-javascript-file-in-another-javascript-file", "tags": ["javascript", "file", "import", "include"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I have a <code>master</code> and a <code>development</code> branch, both pushed to <a href=\"http://en.wikipedia.org/wiki/GitHub\">GitHub</a>. I've <code>clone</code>d, <code>pull</code>ed, and <code>fetch</code>ed, but I remain unable to get anything other than the <code>master</code> branch back.</p>\n\n<p>I'm sure I'm missing something obvious, but I have read the manual and I'm getting no joy at all.</p>\n    </div>", "votes": "2617", "title": "Clone all remote branches with Git?", "link": "http://stackoverflow.com/questions/67699/clone-all-remote-branches-with-git", "tags": ["git", "git-branch", "git-clone", "remote-branch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Is there a plugin-less way of retrieving <a href=\"http://en.wikipedia.org/wiki/Query_string\">query string</a> values via jQuery (or without)? </p>\n\n<p>If so, how? If not, is there a plugin which can do so?</p>\n    </div>", "votes": "2706", "title": "How can I get query string values in JavaScript?", "link": "http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript", "tags": ["javascript", "url", "plugins", "query-string"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What is the difference between <code>INNER JOIN</code> and <code>OUTER JOIN</code>?</p>\n\n<p>How do <code>LEFT JOIN</code>, <code>RIGHT JOIN</code>, and <code>FULL JOIN</code> fit in?</p>\n    </div>", "votes": "2721", "title": "Difference between INNER and OUTER joins", "link": "http://stackoverflow.com/questions/38549/difference-between-inner-and-outer-joins", "tags": ["sql", "join", "inner-join", "outer-join"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>The following are two methods of building a link that has the sole purpose of running JavaScript code. Which is better, in terms of functionality, page load speed, validation purposes, etc.?</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function myJsFunc() {\r\n    alert(\"myJsFunc\");\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;a href=\"#\" onclick=\"myJsFunc();\"&gt;Run JavaScript Code&lt;/a&gt;</code></pre>\r\n</div>\r\n</div>\r\n\n\n<p>or</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function myJsFunc() {\r\n    alert(\"myJsFunc\");\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code> &lt;a href=\"javascript:void(0)\" onclick=\"myJsFunc();\"&gt;Run JavaScript Code&lt;/a&gt;</code></pre>\r\n</div>\r\n</div>\r\n\n    </div>", "votes": "2734", "title": "Href attribute for JavaScript links: \u201c#\u201d or \u201cjavascript:void(0)\u201d?", "link": "http://stackoverflow.com/questions/134845/href-attribute-for-javascript-links-or-javascriptvoid0", "tags": ["javascript", "html", "performance", "optimization", "href"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Yesterday I was pairing the socks from the clean laundry and figured out the way I was doing it is not very efficient. I was doing a naive search\u00a0\u2014 picking one sock and \"iterating\" the pile in order to find its pair. This requires iterating over n/2 * n/4 = n<sup>2</sup>/8 socks on average.</p>\n\n<p>As a computer scientist I was thinking what I could do? Sorting (according to size/color/...) of course came to mind to achieve an O(NlogN) solution.</p>\n\n<p>Hashing or other not-in-place solutions are not an option, because I am not able to duplicate my socks (though it could be nice if I could).</p>\n\n<p><strong>So, the question is basically:</strong></p>\n\n<p>Given a pile of <code>n</code> pairs of socks, containing <code>2n</code> elements (assume each sock has exactly one matching pair), what is the best way to pair them up efficiently with up to logarithmic extra space? (I believe I can remember that amount of info if needed.)</p>\n\n<p>I will appreciate an answer that addresses the following aspects:</p>\n\n<ul>\n<li>A general <em>theoretical</em> solution for a huge number of socks.</li>\n<li>The actual number of socks is not that large, I don't believe my spouse and I have more than 30 pairs. (And it is fairly easy to distinguish between my socks and hers; can this be used as well?)</li>\n<li>Is it equivalent to the <a href=\"http://en.wikipedia.org/wiki/Element_distinctness_problem\">element distinctness problem</a>?</li>\n</ul>\n    </div>", "votes": "2764", "title": "Pair socks from a pile efficiently?", "link": "http://stackoverflow.com/questions/14415881/pair-socks-from-a-pile-efficiently", "tags": ["algorithm", "sorting", "language-agnostic", "matching"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Say I create an object as follows:</p>\n\n<pre><code>var myObject = {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\", \"regex\": \"^http://.*\"};\n</code></pre>\n\n<p>What is the best way to remove the property <code>regex</code> to end up with new <code>myObject</code> as follows?</p>\n\n<pre><code>var myObject = {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\"};\n</code></pre>\n    </div>", "votes": "2764", "title": "How do I remove a property from a JavaScript object?", "link": "http://stackoverflow.com/questions/208105/how-do-i-remove-a-property-from-a-javascript-object", "tags": ["javascript", "object-properties"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I have an array of integers, which I'm using the <code>.push()</code> method to add to.</p>\n\n<p>Is there a simple way to remove a specific element from an array? The equivalent of something like <code>array.remove(int);</code>.</p>\n\n<p>I have to use <em>core</em> JavaScript - <em>no</em> frameworks are allowed.</p>\n    </div>", "votes": "2766", "title": "Remove a particular element from an array in JavaScript?", "link": "http://stackoverflow.com/questions/5767325/remove-a-particular-element-from-an-array-in-javascript", "tags": ["javascript", "arrays"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How do I force an overwrite of local files on a <a href=\"http://en.wikipedia.org/wiki/Git_%28software%29\">Git</a> pull?</p>\n\n<p>The scenario is following:</p>\n\n<ul>\n<li>A team member is modifying the templates for a website we are working on</li>\n<li>They are adding some images to the images directory (but forgets to add them under source control)</li>\n<li>They are sending the images by mail, later, to me</li>\n<li>I'm adding the images under the source control and pushing them to Github together with other changes</li>\n<li>They cannot pull updates from Github because git doesn't want to overwrite their files.</li>\n</ul>\n\n<p>The errors I'm getting are:</p>\n\n<blockquote>\n  <p>error: Untracked working tree file 'public/images/icon.gif' would be overwritten by merge.</p>\n</blockquote>\n\n<p>How do I force Git to overwrite them? The person is a designer - usually I resolve all the conflicts by hand so the server has the most recent version that they just needs to update on their computer.</p>\n    </div>", "votes": "2768", "title": "Force Git to overwrite local files on pull", "link": "http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull", "tags": ["git", "version-control", "overwrite", "git-pull", "git-fetch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>If user input is inserted without modification into an SQL query, then the application becomes vulnerable to <a href=\"http://stackoverflow.com/a/332367/\">SQL injection</a>, like in the following example:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>$unsafe_variable = $_POST['user_input']; \n\nmysql_query(\"INSERT INTO `table` (`column`) VALUES ('$unsafe_variable')\");\n</code></pre>\n\n<p>That's because the user can input something like <code>value'); DROP TABLE table;--</code>, and the query becomes:</p>\n\n<pre><code>INSERT INTO `table` (`column`) VALUES('value'); DROP TABLE table;--')\n</code></pre>\n\n<p>What can be done to prevent this from happening?</p>\n    </div>", "votes": "2788", "title": "How can I prevent SQL-injection in PHP?", "link": "http://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php", "tags": ["php", "mysql", "sql", "security", "sql-injection"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>According to the HTTP/1.1 Spec: </p>\n\n<blockquote>\n  <p>The <strong><code>POST</code></strong> method is used to request that the origin server accept the entity enclosed in the request as a new subordinate of the resource identified by the <code>Request-URI</code> in the <code>Request-Line</code></p>\n</blockquote>\n\n<p>In other words, <code>POST</code> is used to <strong>create</strong>.</p>\n\n<blockquote>\n  <p>The <strong><code>PUT</code></strong> method requests that the enclosed entity be stored under the supplied <code>Request-URI</code>. If the <code>Request-URI</code> refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version of the one residing on the origin server. If the <code>Request-URI</code> does not point to an existing resource, and that URI is capable of being defined as a new resource by the requesting user agent, the origin server can create the resource with that URI.\"</p>\n</blockquote>\n\n<p>That is, <code>PUT</code> is used to <strong>create or update</strong>.</p>\n\n<p>So, which one should be used to create a resource? Or one needs to support both?</p>\n    </div>", "votes": "2792", "title": "PUT vs POST in REST", "link": "http://stackoverflow.com/questions/630453/put-vs-post-in-rest", "tags": ["http", "rest", "post", "put"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What is the maximum length of a URL in different browsers? Does it differ between browsers? </p>\n\n<p>Does the HTTP protocol dictate it?</p>\n    </div>", "votes": "2828", "title": "What is the maximum length of a URL in different browsers?", "link": "http://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers", "tags": ["http", "url", "browser", "max", "content-length"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What is the most efficient way to clone a JavaScript object? I've seen <code>obj = eval(uneval(o));</code> being used, but <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/uneval\">that's non-standard and only supported by Firefox</a>. I've done things like <code>obj = JSON.parse(JSON.stringify(o));</code> but question the efficiency. I've also seen recursive copying functions with various flaws.</p>\n\n<p>I'm surprised no canonical solution exists.</p>\n    </div>", "votes": "2814", "title": "What is the most efficient way to clone an object?", "link": "http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-clone-an-object", "tags": ["javascript", "object", "clone"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I am trying to checkout a remote branch:</p>\n\n<p>Somebody pushed a branch called <code>test</code> with <code>git push origin test</code> to a shared repository. I can see the branch with <code>git branch -r</code>. But how can I get this branch?</p>\n\n<ul>\n<li><p><code>git checkout test</code> does nothing</p></li>\n<li><p><code>git checkout origin/test</code> does something, but <code>git branch</code> says <code>* (no branch)</code>. I am on no branch?</p></li>\n</ul>\n\n<p>How do I share branches via a public repository?</p>\n    </div>", "votes": "2907", "title": "Checkout remote Git branch", "link": "http://stackoverflow.com/questions/1783405/checkout-remote-git-branch", "tags": ["git", "git-checkout", "remote-branch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What are metaclasses? What do you use them for?</p>\n    </div>", "votes": "2850", "title": "What is a metaclass in Python?", "link": "http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python", "tags": ["python", "oop", "metaclass", "python-datamodel"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Is there a good way to explain how to resolve merge conflicts in Git?</p>\n    </div>", "votes": "2924", "title": "Fix merge conflicts in Git?", "link": "http://stackoverflow.com/questions/161813/fix-merge-conflicts-in-git", "tags": ["git", "git-merge", "merge-conflict-resolution", "git-conflict-resolution"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>For anchors that act like buttons (for example, <em>Questions</em>, <em>Tags</em>, <em>Users</em>, etc. at the top of the Stack\u00a0Overflow page) or tabs, is there a CSS standard way to disable the highlighting effect if the user accidentally selects the text?</p>\n\n<p>I realize this could be done with JavaScript, and a little googling yielded the Mozilla-only <code>-moz-user-select</code> option.</p>\n\n<p>Is there a standard-compliant way to accomplish this with CSS, and if not, what is the \"best practice\" approach?</p>\n    </div>", "votes": "2944", "title": "CSS rule to disable text selection highlighting", "link": "http://stackoverflow.com/questions/826782/css-rule-to-disable-text-selection-highlighting", "tags": ["css", "cross-browser", "highlighting", "textselection"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Can I use comments inside a JSON file? If so, how?</p>\n    </div>", "votes": "3282", "title": "Can I use comments inside a JSON file?", "link": "http://stackoverflow.com/questions/244777/can-i-use-comments-inside-a-json-file", "tags": ["json", "comments"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I always thought Java was <strong>pass-by-reference</strong>; however I've seen a couple of blog posts (for example, <a href=\"http://javadude.com/articles/passbyvalue.htm\">this blog</a>) that claim it's not. I don't think I understand the distinction they're making. </p>\n\n<p>What is the explanation?</p>\n    </div>", "votes": "3128", "title": "Is Java \u201cpass-by-reference\u201d or \u201cpass-by-value\u201d?", "link": "http://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value", "tags": ["java", "function", "parameter-passing", "pass-by-reference", "pass-by-value"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>In C#, what is the difference between <code>String</code> and <code>string</code>? (<em>note the case</em>)</p>\n\n<p>Example:</p>\n\n<pre><code>string s = \"Hello world!\";\nString S = \"Hello world!\";\n</code></pre>\n\n<p>What are the guidelines for the use of each? And what are the differences?</p>\n    </div>", "votes": "3379", "title": "In C# What's the difference between String and string?", "link": "http://stackoverflow.com/questions/7074/in-c-sharp-whats-the-difference-between-string-and-string", "tags": ["c#", "string"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What is a plain English explanation of Big O notation? I'd prefer as little formal definition as possible and simple mathematics.</p>\n    </div>", "votes": "3368", "title": "Plain English explanation of Big O", "link": "http://stackoverflow.com/questions/487258/plain-english-explanation-of-big-o", "tags": ["algorithm", "complexity-theory", "computer-science", "big-o", "time-complexity"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How do I revert from my current state to a snapshot made on a certain commit? </p>\n\n<p>If I do <code>git log</code>, I get the following output:</p>\n\n<pre><code>$ git log\ncommit a867b4af366350be2e7c21b8de9cc6504678a61b`\nAuthor: Me &lt;me@me.com&gt;\nDate:   Thu Nov 4 18:59:41 2010 -0400\n\nblah blah blah...\n\ncommit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4\nAuthor: Me &lt;me@me.com&gt;\nDate:   Thu Nov 4 05:13:39 2010 -0400\n\nmore blah blah blah...\n\ncommit 0766c053c0ea2035e90f504928f8df3c9363b8bd\nAuthor: Me &lt;me@me.com&gt;\nDate:   Thu Nov 4 00:55:06 2010 -0400\n\nAnd yet more blah blah...\n\ncommit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50\nAuthor: Me &lt;me@me.com&gt;\nDate:   Wed Nov 3 23:56:08 2010 -0400\n\nYep, more blah blah.\n</code></pre>\n\n<p>How do revert to the commit from November 3, i.e. commit <code>0d1d7fc</code>?</p>\n    </div>", "votes": "3381", "title": "Revert Git repo to a previous commit", "link": "http://stackoverflow.com/questions/4114095/revert-git-repo-to-a-previous-commit", "tags": ["git", "git-reset", "git-revert"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How do you delete untracked local files from your current branch?</p>\n    </div>", "votes": "3420", "title": "How do I remove local (untracked) files from my current Git branch?", "link": "http://stackoverflow.com/questions/61212/how-do-i-remove-local-untracked-files-from-my-current-git-branch", "tags": ["git", "branch", "git-branch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What is the difference between:</p>\n\n<ul>\n<li><code>px</code></li>\n<li><code>dip</code></li>\n<li><code>dp</code></li>\n<li><code>sp</code></li>\n</ul>\n\n<p>on Android?</p>\n    </div>", "votes": "3406", "title": "Difference between px, dp, dip and sp on Android?", "link": "http://stackoverflow.com/questions/2025282/difference-between-px-dp-dip-and-sp-on-android", "tags": ["android", "android-layout", "user-interface", "units-of-measurement"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How come certain random strings produce various colors when entered as background colors in HTML? For example:</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;body bgcolor=\"chucknorris\"&gt; test &lt;/body&gt;</code></pre>\r\n</div>\r\n</div>\r\n\n\n<p>...produces a document with a <strong>red background</strong> across all browsers and platforms.</p>\n\n<p>Interestingly, while <code>chucknorri</code> produces a red background as well, <code>chucknorr</code> produces a yellow background.</p>\n\n<p>What's going on here?</p>\n    </div>", "votes": "3944", "title": "Why does HTML think \u201cchucknorris\u201d is a color?", "link": "http://stackoverflow.com/questions/8318911/why-does-html-think-chucknorris-is-a-color", "tags": ["html", "background-color"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>We have an employee whose last name is Null. Our employee lookup application is killed when that last name is used as the search term (which happens to be quite often now). The error received (thanks Fiddler!) is:</p>\n\n<pre><code>  &lt;soapenv:Fault&gt;\n   &lt;faultcode&gt;soapenv:Server.userException&lt;/faultcode&gt;\n   &lt;faultstring&gt;coldfusion.xml.rpc.CFCInvocationException: [coldfusion.runtime.MissingArgumentException : The SEARCHSTRING parameter to the getFacultyNames function is required but was not passed in.]&lt;/faultstring&gt;\n</code></pre>\n\n<p>Cute, huh?</p>\n\n<p>The parameter type is <code>string</code>.</p>\n\n<p>I am using:</p>\n\n<ul>\n<li>WSDL (SOAP).</li>\n<li>Flex 3.5</li>\n<li>ActionScript 3</li>\n<li>ColdFusion 8</li>\n</ul>\n\n<p>Note that the error DOES NOT occur when calling the webservice as an object from a ColdFusion page.</p>\n    </div>", "votes": "3828", "title": "How do I correctly pass the string \u201cNull\u201d (an employee's proper surname) to a SOAP web service from ActionScript 3?", "link": "http://stackoverflow.com/questions/4456438/how-do-i-correctly-pass-the-string-null-an-employees-proper-surname-to-a-so", "tags": ["flex", "actionscript", "soap", "coldfusion", "wsdl"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I do not want to rename a remote branch, as described in <em><a href=\"http://stackoverflow.com/questions/1526794/rename-master-branch-for-both-local-and-remote-git-repositories?answertab=votes#tab-top\">Rename master branch for both local and remote Git repositories</a></em>.</p>\n\n<p>Instead, I want to use the simplest way to rename a local branch, which is not pushed to a remote branch.</p>\n    </div>", "votes": "3725", "title": "How do I rename the local branch?", "link": "http://stackoverflow.com/questions/6591213/how-do-i-rename-the-local-branch", "tags": ["git", "git-branch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>If I run the following program, which parses two date strings referencing times one second apart and compares them:</p>\n\n<pre><code>public static void main(String[] args) throws ParseException {\n    SimpleDateFormat sf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");  \n    String str3 = \"1927-12-31 23:54:07\";  \n    String str4 = \"1927-12-31 23:54:08\";  \n    Date sDt3 = sf.parse(str3);  \n    Date sDt4 = sf.parse(str4);  \n    long ld3 = sDt3.getTime() /1000;  \n    long ld4 = sDt4.getTime() /1000;\n    System.out.println(ld4-ld3);\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre><code>353\n</code></pre>\n\n<p>Why is <code>ld4-ld3</code> not <code>1</code> (as I would expect from the one-second difference in the times), but <code>353</code>?</p>\n\n<p>If I change the dates to times one second later:</p>\n\n<pre><code>String str3 = \"1927-12-31 23:54:08\";  \nString str4 = \"1927-12-31 23:54:09\";  \n</code></pre>\n\n<p>Then <code>ld4-ld3</code> will be <code>1</code>.</p>\n\n<hr>\n\n<p>Java version:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>java version \"1.6.0_22\"\nJava(TM) SE Runtime Environment (build 1.6.0_22-b04)\nDynamic Code Evolution Client VM (build 0.2-b02-internal, 19.0-b04-internal, mixed mode)\n</code></pre>\n\n<p>Timezone(<code>TimeZone.getDefault()</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",\noffset=28800000,dstSavings=0,\nuseDaylight=false,\ntransitions=19,\nlastRule=null]\n\nLocale(Locale.getDefault()): zh_CN\n</code></pre>\n    </div>", "votes": "4207", "title": "Why is subtracting these two times (in 1927) giving a strange result?", "link": "http://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result", "tags": ["java", "date", "timezone"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I'm using <a href=\"http://en.wikipedia.org/wiki/JSLint\">JSLint</a> to go through JavaScript, and it's returning many suggestions to replace <code>==</code> (two equals signs) with <code>===</code> (three equals signs) when doing things like comparing <code>idSele_UNVEHtype.value.length == 0</code> inside of an <code>if</code> statement.</p>\n\n<p>Is there a performance benefit to replacing <code>==</code> with <code>===</code>? </p>\n\n<p>Any performance improvement would be welcomed as many comparison operators exist.</p>\n\n<p>If no type conversion takes place, would there be a performance gain over <code>==</code>?</p>\n    </div>", "votes": "3668", "title": "Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?", "link": "http://stackoverflow.com/questions/359494/does-it-matter-which-equals-operator-vs-i-use-in-javascript-comparisons", "tags": ["javascript", "operators", "equality", "equality-operator", "identity-operator"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<h2>Form-based authentication for websites</h2>\n\n<p>We believe that Stack\u00a0Overflow should not just be a resource for very specific technical questions, but also for general guidelines on how to solve variations on common problems. \"Form based authentication for websites\" should be a fine topic for such an experiment.</p>\n\n<h3>It should include topics such as:</h3>\n\n<ul>\n<li>How to log in</li>\n<li>How to remain logged in</li>\n<li>How to store passwords</li>\n<li>Using secret questions</li>\n<li>Forgotten username/password functionality</li>\n<li><a href=\"http://openid.net/\">OpenID</a></li>\n<li>\"Remember me\" checkbox</li>\n<li>Browser autocompletion of usernames and passwords</li>\n<li>Secret URLs (public <a href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Locator\">URL</a> protected by digest)</li>\n<li>Checking password strength</li>\n<li>E-mail validation</li>\n<li>and much more about <a href=\"http://en.wikipedia.org/wiki/Form-based_authentication\">form based authentication</a> ...</li>\n</ul>\n\n<h3>It should not include things like:</h3>\n\n<ul>\n<li>roles and authorization</li>\n<li>HTTP basic authentication</li>\n</ul>\n\n<h3>Please help us by</h3>\n\n<ol>\n<li>Suggesting subtopics</li>\n<li>Submitting good articles about this subject</li>\n<li>Editing the official answer</li>\n</ol>\n    </div>", "votes": "3808", "title": "The definitive guide to form-based website authentication", "link": "http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication", "tags": ["security", "http", "authentication", "language-agnostic", "article"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>This question attempts to collect the few pearls among the dozens of bad C++ books that are published every year.</p>\n\n<p>Unlike many other programming languages, which are often picked up on the go from tutorials found on the Internet, few are able to quickly pick up C++ without studying a well-written C++ book. It is way too big and complex for doing this. In fact, it is so big and complex, that <strong><em>there are very many very bad C++ books</em></strong> out there. And we are not talking about bad style, but things like sporting <em>glaringly obvious factual errors</em> and <em>promoting abysmally bad programming styles</em>.</p>\n\n<p>Please edit the accepted answer to provide <strong>quality books</strong> and an approximate skill level \u2014 <em>preferably</em> <strong>after</strong> <em>discussing your addition in <a href=\"http://chat.stackoverflow.com/rooms/10/loungec\">the C++ chat room</a></em>. (The regulars might mercilessly undo your work if they disagree with a recommendation.) Add a short blurb/description about each book that you have personally read/benefited from. Feel free to debate quality, headings, etc. Books that meet the criteria will be added to the list.  Books that have reviews by the Association of C and C++ Users (ACCU) have links to the review. </p>\n\n<p><sub><em>Note: FAQs and other resources can be found in the <a href=\"http://stackoverflow.com/tags/c%2b%2b/info\">C++ tag info</a> and under <a href=\"/questions/tagged/c%2b%2b-faq\" class=\"post-tag\" title=\"show questions tagged 'c++-faq'\" rel=\"tag\">c++-faq</a>. There is also a similar post for C: <a href=\"http://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list\">The Definitive C Book Guide and List</a></em></sub></p>\n    </div>", "votes": "4265", "title": "The Definitive C++ Book Guide and List", "link": "http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list", "tags": ["c++-faq", "c++", "c++-faq"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I've recently started maintaining someone else's JavaScript code. I'm fixing bugs, adding features and also trying to tidy up the code and make it more consistent.</p>\n\n<p>The previous developer uses two ways of declaring functions and I can't work out if there is a reason behind it or not.</p>\n\n<p>The two ways are:</p>\n\n<pre><code>var functionOne = function() {\n    // Some code\n};\n</code></pre>\n\n\n\n<pre><code>function functionTwo() {\n    // Some code\n}\n</code></pre>\n\n<p>What are the reasons for using these two different methods and what are the pros and cons of each? Is there anything that can be done with one method that can't be done with the other?</p>\n    </div>", "votes": "3924", "title": "var functionName = function() {} vs function functionName() {}", "link": "http://stackoverflow.com/questions/336859/var-functionname-function-vs-function-functionname", "tags": ["javascript", "function", "syntax", "idioms"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Programming language books explain that value types are created on the stack, and reference types are created on the heap, without explaining what these two things are. I haven't read a clear explanation of this.  I understand what <em>a stack</em> is, but where and what are they (physically in a real computer's memory)?  </p>\n\n<ul>\n<li>To what extent are they controlled by the OS or language runtime?</li>\n<li>What is their scope?</li>\n<li>What determines the size of each of them?</li>\n<li>What makes one faster? </li>\n</ul>\n    </div>", "votes": "4896", "title": "What and where are the stack and heap?", "link": "http://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap", "tags": ["memory-management", "language-agnostic", "stack", "heap"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How can I redirect the user from one page to another using jQuery?</p>\n    </div>", "votes": "5021", "title": "How can I make a page redirect using jQuery?", "link": "http://stackoverflow.com/questions/503093/how-can-i-make-a-page-redirect-using-jquery", "tags": ["javascript", "jquery", "redirect"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What is the use of the <code>yield</code> keyword in Python? What does it do?</p>\n\n<p>For example, I'm trying to understand this code<sup><strong>1</strong></sup>:</p>\n\n<pre><code>def node._get_child_candidates(self, distance, min_dist, max_dist):\n    if self._leftchild and distance - max_dist &lt; self._median:\n        yield self._leftchild\n    if self._rightchild and distance + max_dist &gt;= self._median:\n        yield self._rightchild  \n</code></pre>\n\n<p>And this is the caller:</p>\n\n<pre><code>result, candidates = list(), [self]\nwhile candidates:\n    node = candidates.pop()\n    distance = node._get_dist(obj)\n    if distance &lt;= max_dist and distance &gt;= min_dist:\n        result.extend(node._values)\n    candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))\nreturn result\n</code></pre>\n\n<p>What happens when the method <code>_get_child_candidates</code> is called?\nA list is returned? A single element is returned? Is it called again? When will subsequent calls stop?</p>\n\n<hr>\n\n<p><sub>\n1. The code comes from Jochen Schulz (jrschulz), who made a great Python library for metric spaces. This is the link to the complete source: <a href=\"http://well-adjusted.de/~jrschulz/mspace/\">Module mspace</a>.</sub></p>\n    </div>", "votes": "4776", "title": "What does the yield keyword do in Python?", "link": "http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python", "tags": ["python", "iterator", "generator", "yield", "coroutine"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>After reading <a href=\"http://groups.google.com/group/comp.lang.c++.moderated/msg/33f173780d58dd20\">Hidden Features and Dark Corners of C++/STL</a> on <code>comp.lang.c++.moderated</code>, I was completely surprised that the following snippet compiled and worked in both Visual Studio 2008 and G++ 4.4.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int x = 10;\n    while (x --&gt; 0) // x goes to 0\n    {\n        printf(\"%d \", x);\n    }\n}\n</code></pre>\n\n<p>I'd assume this is C, since it works in GCC as well. Where is this defined in the standard, and where has it come from?</p>\n    </div>", "votes": "5313", "title": "What is the name of the \u201c-->\u201d operator?", "link": "http://stackoverflow.com/questions/1642028/what-is-the-name-of-the-operator", "tags": ["c++", "c", "operators", "code-formatting", "standards-compliance"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>What are the differences between <code>git pull</code> and <code>git fetch</code>?</p>\n    </div>", "votes": "6016", "title": "What are the differences between 'git pull' and 'git fetch'?", "link": "http://stackoverflow.com/questions/292357/what-are-the-differences-between-git-pull-and-git-fetch", "tags": ["git", "git-pull", "git-fetch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How can I check if one string contains another substring in JavaScript? \nUsually, I would expect a <code>String.contains()</code> method, but there doesn't seem to be one. What is a reasonable way to check for this?</p>\n    </div>", "votes": "4532", "title": "How can I check if one string contains another substring?", "link": "http://stackoverflow.com/questions/1789945/how-can-i-check-if-one-string-contains-another-substring", "tags": ["javascript", "string", "string-matching"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Recently, I ran some of my JavaScript code through Crockford's <a href=\"http://www.jslint.com/\">JSLint</a>, and it gave the following error:</p>\n\n<blockquote>\n  <p>Problem at line 1 character 1: Missing \"use strict\" statement.</p>\n</blockquote>\n\n<p>Doing some searching, I realized that some people add <code>\"use strict\";</code> into their JavaScript code. Once I added the statement, the error stopped appearing. Unfortunately, Google did not reveal much of the history behind this string statement. Certainly it must have something to do with how the JavaScript is interpreted by the browser, but I have no idea what the effect would be.</p>\n\n<p>So what is <code>\"use strict\";</code> all about, what does it imply, and is it still relevant?</p>\n\n<p>Do any of the current browsers respond to the <code>\"use strict\";</code> string or is it for future use?</p>\n    </div>", "votes": "4520", "title": "What does \u201cuse strict\u201d do in JavaScript, and what is the reasoning behind it?", "link": "http://stackoverflow.com/questions/1335851/what-does-use-strict-do-in-javascript-and-what-is-the-reasoning-behind-it", "tags": ["javascript", "syntax", "jslint", "use-strict"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I've been messing around with <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a> for some time, just pushing it out as text and it hasn't hurt anybody (that I know of), but I'd like to start doing things properly.</p>\n\n<p>I have seen <em>so</em> many purported \"standards\" for the JSON content type:</p>\n\n<pre><code>application/json\napplication/x-javascript\ntext/javascript\ntext/x-javascript\ntext/x-json\n</code></pre>\n\n<p>But which is correct, or best? I gather that there are security and browser support issues varying between them.</p>\n\n<p>I know there's a similar question, <em><a href=\"http://stackoverflow.com/questions/404470/what-mime-type-if-json-is-being-returned-by-a-rest-api\">What MIME type if JSON is being returned by a REST API?</a></em>, but I'd like a slightly more targeted answer.</p>\n    </div>", "votes": "6627", "title": "What is the correct JSON content type?", "link": "http://stackoverflow.com/questions/477816/what-is-the-correct-json-content-type", "tags": ["json", "content-type"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I mistakenly added files using the command:</p>\n\n<pre><code>git add myfile.txt\n</code></pre>\n\n<p>I have not yet run <code>git commit</code>. Is there a way to undo this, so these files won't be included in the commit?</p>\n    </div>", "votes": "4620", "title": "Undo 'git add' before commit", "link": "http://stackoverflow.com/questions/348170/undo-git-add-before-commit", "tags": ["git", "version-control", "git-stage"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>In jQuery, it is possible to toggle the visibility of an element, using the functions <code>.hide()</code>, <code>.show()</code> or <code>.toggle()</code>.</p>\n\n<p>Using jQuery, how would you test if an element is visible or hidden?</p>\n    </div>", "votes": "4481", "title": "Checking if an element is hidden", "link": "http://stackoverflow.com/questions/178325/checking-if-an-element-is-hidden", "tags": ["javascript", "jquery", "dom", "visibility"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I want to delete a branch both locally and on my remote project fork on <em>GitHub</em>.</p>\n\n<h3>Successfully Deleted Local Branch</h3>\n\n<pre><code>$ git branch -D bugfix\nDeleted branch bugfix (was 2a14ef7).\n</code></pre>\n\n<p><em>Note:</em> The uppercase <code>-D</code> option is a shortcut for <code>--delete --force</code>. If you want to delete a local branch is already fully merged in its upstream branch, use <code>-d</code> which is a shortcut for <code>--delete</code> (no forcing is needed in that case).</p>\n\n<h3>Failed Attempts to Delete Remote Branch</h3>\n\n<pre><code>$ git branch -d remotes/origin/bugfix\nerror: branch 'remotes/origin/bugfix' not found.\n\n$ git branch -d origin/bugfix\nerror: branch 'origin/bugfix' not found.\n\n$ git branch -rd origin/bugfix\nDeleted remote branch origin/bugfix (was 2a14ef7).\n\n$ git push\nEverything up-to-date\n\n$ git pull\nFrom github.com:gituser/gitproject\n* [new branch] bugfix -&gt; origin/bugfix\nAlready up-to-date.\n</code></pre>\n\n<p>What do I need to do differently to successfully delete the\n<code>remotes/origin/bugfix</code> branch both locally and on GitHub?</p>\n    </div>", "votes": "7344", "title": "Delete a Git branch both locally and remotely", "link": "http://stackoverflow.com/questions/2003505/delete-a-git-branch-both-locally-and-remotely", "tags": ["git", "github", "git-branch", "git-remote"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I wrote the wrong thing in a commit message.</p>\n\n<p>How can I change the message? The commit has not been pushed yet.</p>\n    </div>", "votes": "7688", "title": "Edit an incorrect commit message in Git", "link": "http://stackoverflow.com/questions/179123/edit-an-incorrect-commit-message-in-git", "tags": ["git", "git-commit", "git-rewrite-history", "amend"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How would you explain JavaScript closures to someone with a knowledge of the concepts that make up them (for example, functions, variables and the like), but does not understand closures themselves?</p>\n\n<p>I have seen <a href=\"http://en.wikipedia.org/wiki/Scheme_%28programming_language%29\">the Scheme example</a> given on Stack Overflow, and it did not help.</p>\n    </div>", "votes": "5759", "title": "How do JavaScript closures work?", "link": "http://stackoverflow.com/questions/111102/how-do-javascript-closures-work", "tags": ["javascript", "scope", "closures"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I committed the wrong files to Git.</p>\n\n<p>How can I undo this commit?</p>\n    </div>", "votes": "10082", "title": "How do you undo the last commit?", "link": "http://stackoverflow.com/questions/927358/how-do-you-undo-the-last-commit", "tags": ["git", "git-commit", "git-reset", "git-revert"]}]